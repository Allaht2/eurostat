[{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"r-tools-for-eurostat-open-data","dir":"Articles","previous_headings":"","what":"R Tools for Eurostat Open Data","title":"Tutorial for the eurostat R package","text":"rOpenGov R package provides tools access Eurostat database, can also browse -line data sets documentation. contact information source code, see package website.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Tutorial for the eurostat R package","text":"Release version (CRAN): Development version (Github): Overall, eurostat package includes following functions:","code":"install.packages(\"eurostat\") library(remotes) remotes::install_github(\"ropengov/eurostat\") check_access_to_data    Check access to ec.europe.eu clean_eurostat_cache    Clean Eurostat Cache cut_to_classes          Cuts the Values Column into Classes and                         Polishes the Labels dic_order               Order of Variable Levels from Eurostat                         Dictionary. eu_countries            Countries and Country Codes eurostat-package        R Tools for Eurostat open data eurostat_geodata_60_2016                         Geospatial data of Europe from Gisco in 1:60                         million scale from year 2016 eurotime2date           Date Conversion from Eurostat Time Format eurotime2num            Conversion of Eurostat Time Format to Numeric get_bibentry            Create A Data Bibliography get_eurostat            Read Eurostat Data get_eurostat_dic        Download Eurostat Dictionary get_eurostat_geospatial                         Download Geospatial Data from GISCO get_eurostat_json       Get Data from Eurostat API in JSON get_eurostat_raw        Download Data from Eurostat Database get_eurostat_toc        Download Table of Contents of Eurostat Data                         Sets harmonize_country_code                         Harmonize Country Code label_eurostat          Get Eurostat Codes search_eurostat         Grep Datasets Titles from Eurostat set_eurostat_cache_dir                         Set Eurostat Cache tgs00026                Auxiliary Data evaluate <- curl::has_internet()"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"finding-data","dir":"Articles","previous_headings":"","what":"Finding data","title":"Tutorial for the eurostat R package","text":"Function get_eurostat_toc() downloads table contents eurostat datasets. values column ‘code’ used download selected dataset. data sets (e.g. ‘comext’ type) accessible standard interface. See get_eurostat() function documentation details. search_eurostat() can search table contents particular patterns, e.g. datasets related passenger transport. kable function produces nice markdown output. Note type argument function restrict search instance datasets tables. Codes dataset can searched also Eurostat database. Eurostat database gives codes Data Navigation Tree every dataset parenthesis.","code":"# Load the package library(eurostat) # library(rvest)  # Get Eurostat data listing toc <- get_eurostat_toc()  # Check the first items library(knitr) kable(tail(toc)) # info about passengers kable(head(search_eurostat(\"passenger transport\")))"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading data","title":"Tutorial for the eurostat R package","text":"package supports two Eurostats download methods: bulk download facility Web Services’ JSON API. bulk download facility fastest method download whole datasets. also often way JSON API limitation maximum 50 sub-indicators time whole datasets usually exceeds . download small section dataset JSON API faster, allows make data selection downloading. user usually bother methods, used via main function get_eurostat(). table id given, whole table downloaded bulk download facility. also filters defined JSON API used. example indicator ‘Modal split passenger transport’. percentage share mode transport total inland transport, expressed passenger-kilometres (pkm) based transport passenger cars, buses coaches, trains. data based movements national territory, regardless nationality vehicle. However, data collection harmonized EU level. Pick print id data set download: [1] “t2020_rk310” Get whole corresponding table. table annual data, convenient use numeric time variable use default date format: Investigate structure downloaded data set: can get part dataset defining filters argument. named list, names corresponds variable names (lower case) values vectors codes corresponding desired series (upper case). time variable, addition time, also sinceTimePeriod lastTimePeriod can used.","code":"# For the original data, see # http://ec.europa.eu/eurostat/tgm/table.do?tab=table&init=1&plugin=1&language=en&pcode=tsdtr210 id <- search_eurostat(\"Modal split of passenger transport\",   type = \"table\" )$code[1] print(id) dat <- get_eurostat(id, time_format = \"num\") str(dat) ## tibble [2,919 × 5] (S3: tbl_df/tbl/data.frame) ##  $ unit   : chr [1:2919] \"PC\" \"PC\" \"PC\" \"PC\" ... ##  $ vehicle: chr [1:2919] \"BUS_TOT\" \"BUS_TOT\" \"BUS_TOT\" \"BUS_TOT\" ... ##  $ geo    : chr [1:2919] \"AT\" \"BE\" \"CH\" \"DE\" ... ##  $ time   : num [1:2919] 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 ... ##  $ values : num [1:2919] 8.2 10.6 3.7 9.1 11.3 32.4 14.9 13.5 6 24.8 ... kable(head(dat)) dat2 <- get_eurostat(id, filters = list(geo = c(\"EU28\", \"FI\"), lastTimePeriod = 1), time_format = \"num\") kable(dat2)"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"replacing-codes-with-labels","dir":"Articles","previous_headings":"Downloading data","what":"Replacing codes with labels","title":"Tutorial for the eurostat R package","text":"default variables returned Eurostat codes, get human-readable labels instead, use type = \"label\" argument. Eurostat codes downloaded data set can replaced human-readable labels Eurostat dictionaries label_eurostat() function. label_eurostat() allows conversion individual variable vectors variable names well. Vehicle information 3 levels. can check now :","code":"datl2 <- get_eurostat(id,   filters = list(     geo = c(\"EU28\", \"FI\"),     lastTimePeriod = 1   ),   type = \"label\", time_format = \"num\" ) kable(head(datl2)) datl <- label_eurostat(dat) kable(head(datl)) label_eurostat_vars(names(datl)) ## [1] \"Unit of measure\"                 \"Vehicles\"                        ## [3] \"Geopolitical entity (reporting)\" \"Period of time\" levels(datl$vehicle) ## NULL"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"efta-eurozone-eu-and-eu-candidate-countries","dir":"Articles","previous_headings":"Selecting and modifying data","what":"EFTA, Eurozone, EU and EU candidate countries","title":"Tutorial for the eurostat R package","text":"facilitate smooth visualization standard European geographic areas, package provides ready-made lists country codes used eurostat database EFTA (efta_countries), Euro area (ea_countries), EU (eu_countries) EU candidate countries (eu_candidate_countries). can used select specific groups countries closer investigation. conversions standard country coding systems, see countrycode R package. retrieve country code list EFTA, instance, use:","code":"data(efta_countries) kable(efta_countries)"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"eu-data-from-2012-in-all-vehicles","dir":"Articles","previous_headings":"Selecting and modifying data","what":"EU data from 2012 in all vehicles:","title":"Tutorial for the eurostat R package","text":"","code":"dat_eu12 <- subset(datl, geo == \"European Union - 28 countries\" & time == 2012) kable(dat_eu12, row.names = FALSE)"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"eu-data-from-2000---2012-with-vehicle-types-as-variables","dir":"Articles","previous_headings":"Selecting and modifying data","what":"EU data from 2000 - 2012 with vehicle types as variables:","title":"Tutorial for the eurostat R package","text":"Reshaping data best done spread() tidyr.","code":"library(\"tidyr\") dat_eu_0012 <- subset(dat, geo == \"EU28\" & time %in% 2000:2012) dat_eu_0012_wide <- spread(dat_eu_0012, vehicle, values) kable(subset(dat_eu_0012_wide, select = -geo), row.names = FALSE)"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"train-passengers-for-selected-eu-countries-in-2000---2012","dir":"Articles","previous_headings":"Selecting and modifying data","what":"Train passengers for selected EU countries in 2000 - 2012","title":"Tutorial for the eurostat R package","text":"","code":"dat_trains <- subset(datl, geo %in% c(\"Austria\", \"Belgium\", \"Finland\", \"Sweden\") &   time %in% 2000:2012 &   vehicle == \"Trains\") dat_trains_wide <- spread(dat_trains, geo, values) kable(subset(dat_trains_wide, select = -vehicle), row.names = FALSE)"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"sdmx","dir":"Articles","previous_headings":"Selecting and modifying data","what":"SDMX","title":"Tutorial for the eurostat R package","text":"Eurostat data available also Statistical Data Metadata eXchange (SDMX) Web Services. eurostat R package provide custom tools following generic R packages provide access eurostat SDMX version: restatapi rsdmx rjsdmx","code":""},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"further-examples","dir":"Articles","previous_headings":"","what":"Further examples","title":"Tutorial for the eurostat R package","text":"examples, see package homepage.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"recommended-packages","dir":"Articles","previous_headings":"Citations and related work","what":"Recommended packages","title":"Tutorial for the eurostat R package","text":"NOTE: recommend check also giscoR package (https://dieghernan.github.io/giscoR/). another API package provides R tools Eurostat geographic data support geospatial analysis visualization.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"citing-the-data-sources","dir":"Articles","previous_headings":"Citations and related work","what":"Citing the data sources","title":"Tutorial for the eurostat R package","text":"Eurostat data: cite Eurostat. Administrative boundaries: cite EuroGeographics","code":""},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"citing-the-eurostat-r-package","dir":"Articles","previous_headings":"Citations and related work","what":"Citing the eurostat R package","title":"Tutorial for the eurostat R package","text":"main developers contributors, see package homepage. work can freely used, modified distributed BSD-2-clause (modified FreeBSD) license:","code":"citation(\"eurostat\") ##  ## Kindly cite the eurostat R package as follows: ##  ##   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. ##   Retrieval and analysis of Eurostat open data with the eurostat ##   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 ##   Package URL: http://ropengov.github.io/eurostat Article URL: ##   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html ##  ## A BibTeX entry for LaTeX users is ##  ##   @Article{, ##     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, ##     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, ##     journal = {The R Journal}, ##     volume = {9}, ##     number = {1}, ##     pages = {385--392}, ##     year = {2017}, ##     doi = {10.32614/RJ-2017-019}, ##     url = {https://doi.org/10.32614/RJ-2017-019}, ##   }"},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"contact","dir":"Articles","previous_headings":"Citations and related work","what":"Contact","title":"Tutorial for the eurostat R package","text":"contact information, see package homepage.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/eurostat_tutorial.html","id":"version-info","dir":"Articles","previous_headings":"","what":"Version info","title":"Tutorial for the eurostat R package","text":"tutorial created ","code":"sessionInfo() ## R version 4.1.3 (2022-03-10) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.4 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] tidyr_1.2.0     eurostat_3.7.10 knitr_1.37      ##  ## loaded via a namespace (and not attached): ##  [1] Rcpp_1.0.8.2       lubridate_1.8.0    here_1.0.1         countrycode_1.3.1  ##  [5] class_7.3-20       assertthat_0.2.1   rprojroot_2.0.2    digest_0.6.29      ##  [9] utf8_1.2.2         R6_2.5.1           cellranger_1.1.0   plyr_1.8.6         ## [13] backports_1.4.1    evaluate_0.15      e1071_1.7-9        highr_0.9          ## [17] httr_1.4.2         pillar_1.7.0       rlang_1.0.2        curl_4.3.2         ## [21] readxl_1.3.1       jquerylib_0.1.4    rmarkdown_2.13     pkgdown_2.0.2      ## [25] textshaping_0.3.6  desc_1.4.1         RefManageR_1.3.0   readr_2.1.2        ## [29] stringr_1.4.0      bit_4.0.4          proxy_0.4-26       broom_0.7.12       ## [33] compiler_4.1.3     xfun_0.30          pkgconfig_2.0.3    systemfonts_1.0.4  ## [37] htmltools_0.5.2    tidyselect_1.1.2   tibble_3.1.6       regions_0.1.8      ## [41] fansi_1.0.2        crayon_1.5.0       dplyr_1.0.8        tzdb_0.2.0         ## [45] jsonlite_1.8.0     lifecycle_1.0.1    magrittr_2.0.2     KernSmooth_2.23-20 ## [49] vroom_1.5.7        cli_3.2.0          stringi_1.7.6      cachem_1.0.6       ## [53] fs_1.5.2           xml2_1.3.3         bslib_0.3.1        ellipsis_0.3.2     ## [57] ragg_1.2.2         generics_0.1.2     vctrs_0.3.8        tools_4.1.3        ## [61] bit64_4.0.5        glue_1.6.2         purrr_0.3.4        hms_1.1.1          ## [65] parallel_4.1.3     fastmap_1.1.0      yaml_2.3.5         classInt_0.4-3     ## [69] memoise_2.0.1      sass_0.4.0"},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"choropleth-map","dir":"Articles","previous_headings":"","what":"Choropleth Map","title":"Mapping Regional Data, Mapping Metadata Problems","text":"Let us try place data ggplot2 map. Let us download map get_eurostat_geospatial. use NUTS2016, .e., year = 2016, regional boundary definition set 2016 used period 2018-2020. used definition 2021. always join data geometric information regions starting left map: Huge parts Europe covered, missing values randomly missing. France went regional reform; Turkey Albania provide data earlier. Ireland regional statistics available.","code":"library(ggplot2) map_nuts_2 <- eurostat::get_eurostat_geospatial(   resolution = \"60\",   nuts_level = \"2\",   year = 2016 ) #> Loading required namespace: sf #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> sf at resolution 1:60 read from local file #> Warning in eurostat::get_eurostat_geospatial(resolution = \"60\", nuts_level = #> \"2\", : Default of 'make_valid' for 'output_class=\"sf\"' will be changed in the #> future (see function details). indicator_with_map <- map_nuts_2 %>%   left_join(regional_rd_personnel, by = \"geo\") indicator_with_map %>%   ggplot() +   geom_sf(aes(fill = values),     color = \"dim grey\", size = .1   ) +   scale_fill_gradient(low = \"#FAE000\", high = \"#00843A\") +   facet_wrap(facets = \"time\") +   labs(     title = \"R&D Personnel & Researchers\",     subtitle = \"In all sectors, both sexes by NUTS 2 regions\",     caption = \"\\ua9 EuroGeographics for the administrative boundaries                 \\ua9 Tutorial and ready-to-use data on economy.dataobservatory.eu\",     fill = NULL   ) +   theme_light() +   theme(legend.position = \"none\") +   coord_sf(xlim = c(-22, 48), ylim = c(34, 70))"},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"missing-values-and-seemingly-missing-values","dir":"Articles","previous_headings":"","what":"Missing Values and Seemingly Missing Values","title":"Mapping Regional Data, Mapping Metadata Problems","text":"problems real missing data problems, coding problem. words, data , conforming boundaries NUTS2016 map. First need validate geographical coding dataset. task validate_nuts_regions(). validate dataset, see many interesting metadata observations. Even though dataset called R&D personnel researchers sector performance, sex NUTS 2 regions (rd_p_persreg), fact, contains data country NUTS1 levels. data non-EU countries 2009 part NUTS system. situation better 2018: dataset plagued data place NUTS2016 boundary definition, therefore NUTS2016 map! non-conforming bits? Plenty French units. France went regional administrative reform, data past, current boundaries coding. lesser extent, problem Poland UK. comparative data Asia country level, ended regional dataset. Norway, member EEA, 2021 officially part NUTS2021 system. nice provide data consistently past. aggregates like entire EU eurozone.","code":"validated_indicator <- regions::validate_nuts_regions(regional_rd_personnel) library(dplyr) validation_summary_2016 <- validated_indicator %>%   group_by(.data$time, .data$typology) %>%   summarize(     observations = n(),     values_missing = sum(is.na(.data$values)),     values_present = sum(!is.na(.data$values)),     valid_present = values_present / observations   ) validation_summary_2016 %>%   ungroup() %>%   filter(.data$time == \"2009\") #> # A tibble: 7 × 6 #>   time  typology        observations values_missing values_present valid_present #>   <chr> <chr>                  <int>          <int>          <int>         <dbl> #> 1 2009  country                   28              1             27         0.964 #> 2 2009  non_eu_country             7              2              5         0.714 #> 3 2009  non_eu_nuts_le…            7              4              3         0.429 #> 4 2009  non_eu_nuts_le…           10              5              5         0.5   #> 5 2009  nuts_level_1             105             14             91         0.867 #> 6 2009  nuts_level_2             265             49            216         0.815 #> 7 2009  NA                        56              3             53         0.946 validation_summary_2016 %>%   ungroup() %>%   filter(.data$time == \"2018\") #> # A tibble: 7 × 6 #>   time  typology        observations values_missing values_present valid_present #>   <chr> <chr>                  <int>          <int>          <int>         <dbl> #> 1 2018  country                   28              0             28         1     #> 2 2018  non_eu_country             7              1              6         0.857 #> 3 2018  non_eu_nuts_le…            7              1              6         0.857 #> 4 2018  non_eu_nuts_le…           10              0             10         1     #> 5 2018  nuts_level_1             105             45             60         0.571 #> 6 2018  nuts_level_2             265            113            152         0.574 #> 7 2018  NA                        56             45             11         0.196 validated_indicator %>%   filter(!.data$valid_2016) %>%   select(all_of(\"geo\")) %>%   unlist() %>%   as.character},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"recoding-and-renaming","dir":"Articles","previous_headings":"","what":"Recoding and Renaming","title":"Mapping Regional Data, Mapping Metadata Problems","text":"question , can save French data? boundaries regions changed, : somebody must reaggregate number researchers used work newly defined region back , reform. cases, regional boundaries change, name code region, task performed recode_nuts(): Let us take look problems identified regions::recode_nuts(): able recode quite data points NUTS2016 definition time observation 2009 well 2018. Sometimes recoding rows missing values, help much: know data , missing anyway. particularly year 2009 can save plenty data recorded obsolete coding. identify problems. coding used various time periods, clear recoding possibility, regions boundaries changed. history data, need recalculate , say, adding R&D personnel settlement new regional boundary. following non-empty cases present dataset, just coding used 2018-2020 period (.e., NUTS2016 coding.) able save 27 observations just fixing regional codes! , let us trick: change geo variable code_2016, , whenever equivalent geo code NUTS2016 definition, data . original geo variable contains codes used, example, NUTS2010 NUTS2013 boundary definitions. Let us make work visible creating three observation type variables: missing present dataset; correctly coded recoding; became visible recoding. let’s place now map:","code":"recoded_indicator <- regional_rd_personnel %>%   regions::recode_nuts(     geo_var = \"geo\", # your geograhical ID variable name     nuts_year = 2016 # change this for other definitions   ) recoding_summary <- recoded_indicator %>%   mutate(observations = nrow(.data)) %>%   mutate(typology_change = ifelse(grepl(\"Recoded\", .data$typology_change),     yes = \"Recoded\",     no = .data$typology_change   )) %>%   group_by(.data$typology_change, .data$time) %>%   summarize(     values_missing = sum(is.na(.data$values)),     values_present = sum(!is.na(.data$values)),     pct = values_present / (values_present + values_missing)   ) recoding_summary #> # A tibble: 12 × 5 #> # Groups:   typology_change [6] #>    typology_change        time  values_missing values_present   pct #>    <chr>                  <chr>          <int>          <int> <dbl> #>  1 Not found in NUTS      2009               1             11 0.917 #>  2 Not found in NUTS      2018               1             11 0.917 #>  3 Recoded                2009              12             42 0.778 #>  4 Recoded                2018              32             22 0.407 #>  5 unchanged              2009              64            334 0.839 #>  6 unchanged              2018             158            240 0.603 #>  7 Used in NUTS 1999-2013 2009               1              7 0.875 #>  8 Used in NUTS 1999-2013 2018               8              0 0     #>  9 Used in NUTS 2006-2013 2009               0              5 1     #> 10 Used in NUTS 2006-2013 2018               5              0 0     #> 11 Used in NUTS 2021-2021 2009               0              1 1     #> 12 Used in NUTS 2021-2021 2018               1              0 0 recoded_indicator %>%   filter(.data$typology == \"nuts_level_2\") %>%   filter(!is.na(.data$typology_change)) %>%   filter(     # Keep only pairs where we actually save     # non-missing observations     !is.na(values)   ) %>%   distinct(.data$geo, .data$code_2016) %>%   filter(     # We filter out cases of countries who     # joined the NUTS system later     .data$geo != .data$code_2016   ) #> # A tibble: 27 × 2 #>    geo   code_2016 #>    <chr> <chr>     #>  1 FR21  FRF2      #>  2 FR22  FRE2      #>  3 FR23  FRD2      #>  4 FR24  FRB0      #>  5 FR25  FRD1      #>  6 FR26  FRC1      #>  7 FR3   FRE1      #>  8 FR30  FRE1      #>  9 FR41  FRF3      #> 10 FR42  FRF1      #> # … with 17 more rows recoded_with_map <- map_nuts_2 %>%   left_join(     recoded_indicator %>%       mutate(geo = .data$code_2016),     by = \"geo\"   ) regional_rd_personnel_recoded <- recoded_indicator %>%   mutate(geo = .data$code_2016) %>%   rename(values_2016 = .data$values) %>%   select(-all_of(c(\"typology\", \"typology_change\", \"code_2016\"))) %>%   full_join(     regional_rd_personnel,     by = c(\"prof_pos\", \"sex\", \"sectperf\", \"unit\", \"geo\", \"time\")   ) %>%   mutate(type = case_when(     is.na(.data$values_2016) & is.na(.data$values) ~ \"missing\",     is.na(.data$values) ~ \"after\",     TRUE ~ \"before\"   )) map_nuts_2 %>%   left_join(regional_rd_personnel_recoded, by = \"geo\") %>%   filter(     # remove completely missing cases     !is.na(.data$time)   ) %>%   ggplot() +   geom_sf(aes(fill = type),     color = \"dim grey\", size = .1   ) +   scale_fill_manual(values = c(\"#FAE000\", \"#007CBB\", \"grey70\")) +   guides(fill = guide_legend(reverse = T, title = NULL)) +   facet_wrap(facets = \"time\") +   labs(     title = \"R&D Personnel & Researchers\",     subtitle = \"In all sectors, both sexes by NUTS 2 regions\",     caption = \"\\ua9 EuroGeographics for the administrative boundaries                 \\ua9 Daniel Antal, rOpenGov\",     fill = NULL   ) +   theme_light() +   theme(legend.position = c(.93, .7)) +   coord_sf(xlim = c(-22, 48), ylim = c(34, 70))"},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Mapping Regional Data, Mapping Metadata Problems","text":"improve dataset, improvement worked traditional imputation techniques well. example, replacing missing French data median value Europe created huge bias dataset. example simplification. many territorial typologies use Europe globally, main takeaway clear: sub-national boundaries changing fast, must make sure join datasets, data map boundary definitions.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"citing-the-data-sources","dir":"Articles","previous_headings":"Citations and related work","what":"Citing the data sources","title":"Mapping Regional Data, Mapping Metadata Problems","text":"Eurostat data: cite Eurostat. Administrative boundaries: cite EuroGeographics.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"citing-the-eurostat-r-package","dir":"Articles","previous_headings":"Citations and related work","what":"Citing the eurostat R package","title":"Mapping Regional Data, Mapping Metadata Problems","text":"main developers contributors, see package homepage. work can freely used, modified distributed BSD-2-clause (modified FreeBSD) license:","code":"citation(\"eurostat\") #>  #> Kindly cite the eurostat R package as follows: #>  #>   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #>   Retrieval and analysis of Eurostat open data with the eurostat #>   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #>   Package URL: http://ropengov.github.io/eurostat Article URL: #>   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #>     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #>     journal = {The R Journal}, #>     volume = {9}, #>     number = {1}, #>     pages = {385--392}, #>     year = {2017}, #>     doi = {10.32614/RJ-2017-019}, #>     url = {https://doi.org/10.32614/RJ-2017-019}, #>   }"},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"citing-the-regions-r-package","dir":"Articles","previous_headings":"Citations and related work","what":"Citing the regions R package","title":"Mapping Regional Data, Mapping Metadata Problems","text":"main developer contributors, see package. work can freely used, modified distributed GPL-3 license:","code":"citation(\"regions\") #>  #> To cite package 'regions' in publications use: #>  #>   Daniel Antal (2021). regions: Processing Regional Statistics. R #>   package version 0.1.8. https://regions.dataobservatory.eu/ #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {regions: Processing Regional Statistics}, #>     author = {Daniel Antal}, #>     year = {2021}, #>     note = {R package version 0.1.8}, #>     url = {https://regions.dataobservatory.eu/}, #>   }"},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"contact","dir":"Articles","previous_headings":"Citations and related work","what":"Contact","title":"Mapping Regional Data, Mapping Metadata Problems","text":"contact information, see package homepage.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/mapping.html","id":"version-info","dir":"Articles","previous_headings":"","what":"Version info","title":"Mapping Regional Data, Mapping Metadata Problems","text":"tutorial created ","code":"sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.3.5   dplyr_1.0.8     eurostat_3.7.10 regions_0.1.8   #>  #> loaded via a namespace (and not attached): #>  [1] Rcpp_1.0.8.2       lubridate_1.8.0    here_1.0.1         countrycode_1.3.1  #>  [5] tidyr_1.2.0        class_7.3-20       assertthat_0.2.1   rprojroot_2.0.2    #>  [9] digest_0.6.29      utf8_1.2.2         R6_2.5.1           cellranger_1.1.0   #> [13] plyr_1.8.6         backports_1.4.1    evaluate_0.15      e1071_1.7-9        #> [17] highr_0.9          httr_1.4.2         pillar_1.7.0       rlang_1.0.2        #> [21] curl_4.3.2         readxl_1.3.1       jquerylib_0.1.4    rmarkdown_2.13     #> [25] pkgdown_2.0.2      textshaping_0.3.6  desc_1.4.1         RefManageR_1.3.0   #> [29] readr_2.1.2        stringr_1.4.0      munsell_0.5.0      proxy_0.4-26       #> [33] broom_0.7.12       compiler_4.1.3     xfun_0.30          pkgconfig_2.0.3    #> [37] systemfonts_1.0.4  htmltools_0.5.2    tidyselect_1.1.2   tibble_3.1.6       #> [41] fansi_1.0.2        sf_1.0-7           withr_2.5.0        crayon_1.5.0       #> [45] tzdb_0.2.0         wk_0.6.0           grid_4.1.3         DBI_1.1.2          #> [49] gtable_0.3.0       jsonlite_1.8.0     lifecycle_1.0.1    magrittr_2.0.2     #> [53] units_0.8-0        scales_1.1.1       KernSmooth_2.23-20 cli_3.2.0          #> [57] stringi_1.7.6      cachem_1.0.6       farver_2.1.0       fs_1.5.2           #> [61] xml2_1.3.3         bslib_0.3.1        ellipsis_0.3.2     ragg_1.2.2         #> [65] generics_0.1.2     vctrs_0.3.8        s2_1.0.7           tools_4.1.3        #> [69] glue_1.6.2         purrr_0.3.4        hms_1.1.1          fastmap_1.1.0      #> [73] yaml_2.3.5         colorspace_2.0-3   classInt_0.4-3     memoise_2.0.1      #> [77] knitr_1.37         sass_0.4.0"},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"r-tools-for-eurostat-open-data-maps","dir":"Articles","previous_headings":"","what":"R Tools for Eurostat Open Data: maps","title":"Map examples for the eurostat R package","text":"rOpenGov R package provides tools access Eurostat database, can also browse -line data sets documentation. contact information source code, see package website. See eurostat vignette installation basic use.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"maps","dir":"Articles","previous_headings":"R Tools for Eurostat Open Data: maps","what":"Maps","title":"Map examples for the eurostat R package","text":"NOTE: recommend check also giscoR package (https://dieghernan.github.io/giscoR/). another API package provides R tools Eurostat geographic data support geospatial analysis visualization.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"disposable-income-of-private-households-by-nuts-2-regions-at-160mln-resolution-using-tmap","dir":"Articles","previous_headings":"R Tools for Eurostat Open Data: maps > Maps","what":"Disposable income of private households by NUTS 2 regions at 1:60mln resolution using tmap","title":"Map examples for the eurostat R package","text":"mapping examples use tmap package. Construct map  Interactive maps can generated well","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(eurostat) library(sf) #> Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE library(tmap)  # Download attribute data from Eurostat sp_data <- eurostat::get_eurostat(\"tgs00026\",   time_format = \"raw\" ) %>%   # subset to have only a single row per geo   dplyr::filter(time == 2010, nchar(geo) == 4) %>%   # categorise   dplyr::mutate(income = cut_to_classes(values, n = 5)) #> Table tgs00026 cached at /tmp/RtmpBLpMpp/r_cache2/tgs00026_raw_code_FF.rds  # Download geospatial data from GISCO geodata <- get_eurostat_geospatial(   output_class = \"sf\",   resolution = \"60\",   nuts_level = 2,   year = 2013 ) #> Object cached at /tmp/RtmpBLpMpp/r_cache2/sf60220134326.RData #> No encoding supplied: defaulting to UTF-8. #> sf at resolution 1: 60  cached at:  /tmp/RtmpBLpMpp/r_cache2/sf60220134326.RData #> Warning in get_eurostat_geospatial(output_class = \"sf\", resolution = \"60\", : #> Default of 'make_valid' for 'output_class=\"sf\"' will be changed in the future #> (see function details).  # merge with attribute data with geodata map_data <- inner_join(geodata, sp_data) #> Joining, by = \"geo\" # Fix / remove some broken entries for the demo purpose geodata <- sf::st_make_valid(geodata) geodata <- geodata[sf::st_is_valid(geodata), ]  # Create and plot the map map1 <- tmap::tm_shape(geodata) +   tmap::tm_fill(\"lightgrey\") +   tmap::tm_shape(map_data) +   tmap::tm_grid() +   tmap::tm_polygons(\"income\",     title = \"Disposable household\\nincomes in 2010\",     palette = \"Oranges\"   ) print(map1) # Interactive tmap_mode(\"view\") map1  # Set the mode back to normal plotting tmap_mode(\"plot\") print(map1)"},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"disposable-income-of-private-households-by-nuts-2-regions-in-poland-with-labels-at-11mln-resolution-using-tmap","dir":"Articles","previous_headings":"R Tools for Eurostat Open Data: maps > Maps","what":"Disposable income of private households by NUTS 2 regions in Poland with labels at 1:1mln resolution using tmap","title":"Map examples for the eurostat R package","text":"","code":"library(eurostat) library(dplyr) library(sf) library(RColorBrewer)  # Downloading and manipulating the tabular data print(\"Let us focus on year 2014 and NUTS-3 level\") #> [1] \"Let us focus on year 2014 and NUTS-3 level\" euro_sf2 <- get_eurostat(\"tgs00026\",   time_format = \"raw\",   filter = list(time = \"2014\") ) %>%   # Subset to NUTS-3 level   dplyr::filter(grepl(\"PL\", geo)) %>%   # label the single geo column   mutate(     label = paste0(label_eurostat(.)[[\"geo\"]], \"\\n\", values, \"€\"),     income = cut_to_classes(values)   )  print(\"Download geospatial data from GISCO\") #> [1] \"Download geospatial data from GISCO\" geodata <- get_eurostat_geospatial(output_class = \"sf\", resolution = \"60\", nuts_level = 2, year = 2013) #> Object cached at /tmp/RtmpBLpMpp/r_cache2/sf60220134326.RData #> Reading cache file /tmp/RtmpBLpMpp/r_cache2/sf60220134326.RData #> sf at resolution 1: 60  from year  2013  read from cache file:  /tmp/RtmpBLpMpp/r_cache2/sf60220134326.RData  # Merge with attribute data with geodata map_data <- inner_join(geodata, euro_sf2) #> Joining, by = \"geo\"  # Fix / remove some broken entries for the demo purpose geodata <- sf::st_make_valid(geodata) geodata <- geodata[sf::st_is_valid(geodata), ]  # plot map library(tmap)  map2 <- tm_shape(geodata) +   tm_fill(\"lightgrey\") +   tm_shape(map_data, is.master = TRUE) +   tm_polygons(\"income\",     title = \"Disposable household incomes in 2014\",     palette = \"Oranges\", border.col = \"white\"   ) +   tm_text(\"NUTS_NAME\", just = \"center\") +   tm_scale_bar() map2"},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"disposable-income-of-private-households-by-nuts-2-regions-at-110mln-resolution-using-spplot","dir":"Articles","previous_headings":"R Tools for Eurostat Open Data: maps > Maps","what":"Disposable income of private households by NUTS 2 regions at 1:10mln resolution using spplot","title":"Map examples for the eurostat R package","text":"","code":"library(sp) library(eurostat) library(dplyr) library(RColorBrewer) dat <- get_eurostat(\"tgs00026\", time_format = \"raw\") %>%   # subsetting to year 2014 and NUTS-2 level   dplyr::filter(time == 2014, nchar(geo) == 4) %>%   # classifying the values the variable   dplyr::mutate(cat = cut_to_classes(values))  # Download geospatial data from GISCO geodata <- get_eurostat_geospatial(output_class = \"spdf\", resolution = \"10\", nuts_level = 2, year = 2013)  # merge with attribute data with geodata geodata@data <- left_join(geodata@data, dat)  # plot map sp::spplot(   obj = geodata, \"cat\", main = \"Disposable household income\",   xlim = c(-22, 34), ylim = c(35, 70),   col.regions = c(\"dim grey\", brewer.pal(n = 5, name = \"Oranges\")),   col = \"white\", usePolypath = FALSE )"},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"disposable-income-of-private-households-by-nuts-2-regions-at-160mln-resolution-using-ggplot2","dir":"Articles","previous_headings":"R Tools for Eurostat Open Data: maps > Maps","what":"Disposable income of private households by NUTS 2 regions at 1:60mln resolution using ggplot2","title":"Map examples for the eurostat R package","text":"Meanwhile CRAN version ggplot2 lacking support simple features, can plot maps ggplot2 downloading geospatial data data.frame output_class argument set df.","code":"# Disposable income of private households by NUTS 2 regions at 1:60mln res library(eurostat) library(dplyr) library(ggplot2) data_eurostat <- get_eurostat(\"tgs00026\", time_format = \"raw\") %>%   dplyr::filter(time == 2018, nchar(geo) == 4) %>%   # classifying the values the variable   dplyr::mutate(cat = cut_to_classes(values)) #> Reading cache file /tmp/RtmpBLpMpp/r_cache2/tgs00026_raw_code_FF.rds #> Table  tgs00026  read from cache file:  /tmp/RtmpBLpMpp/r_cache2/tgs00026_raw_code_FF.rds  # Download geospatial data from GISCO data_geo <- get_eurostat_geospatial(resolution = \"60\", nuts_level = \"2\", year = 2021) #> Object cached at /tmp/RtmpBLpMpp/r_cache2/sf60220214326.RData #> No encoding supplied: defaulting to UTF-8. #> sf at resolution 1: 60  cached at:  /tmp/RtmpBLpMpp/r_cache2/sf60220214326.RData #> Warning in get_eurostat_geospatial(resolution = \"60\", nuts_level = \"2\", : #> Default of 'make_valid' for 'output_class=\"sf\"' will be changed in the future #> (see function details).  # merge with attribute data with geodata data <- inner_join(data_geo, data_eurostat) #> Joining, by = \"geo\"  ## Joining, by = \"geo\" ggplot(data = data) +   geom_sf(aes(fill = cat), color = \"dim grey\", size = 0.1) +   scale_fill_brewer(palette = \"Oranges\") +   guides(fill = guide_legend(reverse = TRUE, title = \"euro\")) +   labs(     title = \"Disposable household income in 2018\",     caption = \"(C) EuroGeographics for the administrative boundaries                 Map produced in R with data from Eurostat-package <http://ropengov.github.io/eurostat>\"   ) +   theme_light() +   theme(legend.position = c(.8, .8)) +   coord_sf(xlim = c(-12, 44), ylim = c(35, 70))"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"citing-the-data-sources","dir":"Articles","previous_headings":"Citations and related work","what":"Citing the data sources","title":"Map examples for the eurostat R package","text":"Eurostat data: cite Eurostat. Administrative boundaries: cite EuroGeographics","code":""},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"citing-the-eurostat-r-package","dir":"Articles","previous_headings":"Citations and related work","what":"Citing the eurostat R package","title":"Map examples for the eurostat R package","text":"main developers contributors, see package homepage. work can freely used, modified distributed BSD-2-clause (modified FreeBSD) license:","code":"citation(\"eurostat\") #>  #> Kindly cite the eurostat R package as follows: #>  #>   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #>   Retrieval and analysis of Eurostat open data with the eurostat #>   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #>   Package URL: http://ropengov.github.io/eurostat Article URL: #>   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #>     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #>     journal = {The R Journal}, #>     volume = {9}, #>     number = {1}, #>     pages = {385--392}, #>     year = {2017}, #>     doi = {10.32614/RJ-2017-019}, #>     url = {https://doi.org/10.32614/RJ-2017-019}, #>   }"},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"contact","dir":"Articles","previous_headings":"Citations and related work","what":"Contact","title":"Map examples for the eurostat R package","text":"contact information, see package homepage.","code":""},{"path":"https://ropengov.github.io/eurostat/articles/maps.html","id":"version-info","dir":"Articles","previous_headings":"","what":"Version info","title":"Map examples for the eurostat R package","text":"tutorial created ","code":"sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.3.5      RColorBrewer_1.1-2 tmap_3.3-3         sf_1.0-7           #> [5] dplyr_1.0.8        eurostat_3.7.10    #>  #> loaded via a namespace (and not attached): #>   [1] fs_1.5.2           lubridate_1.8.0    bit64_4.0.5        #>   [4] httr_1.4.2         rprojroot_2.0.2    tools_4.1.3        #>   [7] backports_1.4.1    bslib_0.3.1        utf8_1.2.2         #>  [10] R6_2.5.1           KernSmooth_2.23-20 colorspace_2.0-3   #>  [13] DBI_1.1.2          raster_3.5-15      withr_2.5.0        #>  [16] sp_1.4-6           tidyselect_1.1.2   leaflet_2.1.0      #>  [19] bit_4.0.4          curl_4.3.2         compiler_4.1.3     #>  [22] leafem_0.1.6       textshaping_0.3.6  cli_3.2.0          #>  [25] Cairo_1.5-14       xml2_1.3.3         desc_1.4.1         #>  [28] sass_0.4.0         scales_1.1.1       classInt_0.4-3     #>  [31] readr_2.1.2        proxy_0.4-26       pkgdown_2.0.2      #>  [34] systemfonts_1.0.4  stringr_1.4.0      digest_0.6.29      #>  [37] rmarkdown_2.13     base64enc_0.1-3    dichromat_2.0-0    #>  [40] pkgconfig_2.0.3    htmltools_0.5.2    highr_0.9          #>  [43] fastmap_1.1.0      htmlwidgets_1.5.4  rlang_1.0.2        #>  [46] readxl_1.3.1       farver_2.1.0       jquerylib_0.1.4    #>  [49] generics_0.1.2     jsonlite_1.8.0     crosstalk_1.2.0    #>  [52] vroom_1.5.7        magrittr_2.0.2     s2_1.0.7           #>  [55] munsell_0.5.0      Rcpp_1.0.8.2       fansi_1.0.2        #>  [58] abind_1.4-5        RefManageR_1.3.0   lifecycle_1.0.1    #>  [61] terra_1.5-21       stringi_1.7.6      leafsync_0.1.0     #>  [64] yaml_2.3.5         tmaptools_3.1-1    plyr_1.8.6         #>  [67] grid_4.1.3         parallel_4.1.3     regions_0.1.8      #>  [70] crayon_1.5.0       lattice_0.20-45    stars_0.5-5        #>  [73] hms_1.1.1          knitr_1.37         pillar_1.7.0       #>  [76] codetools_0.2-18   wk_0.6.0           XML_3.99-0.3       #>  [79] glue_1.6.2         evaluate_0.15      vctrs_0.3.8        #>  [82] png_0.1-7          tzdb_0.2.0         cellranger_1.1.0   #>  [85] gtable_0.3.0       purrr_0.3.4        tidyr_1.2.0        #>  [88] assertthat_0.2.1   cachem_1.0.6       xfun_0.30          #>  [91] mime_0.12          lwgeom_0.2-8       broom_0.7.12       #>  [94] countrycode_1.3.1  e1071_1.7-9        ragg_1.2.2         #>  [97] class_7.3-20       viridisLite_0.4.0  tibble_3.1.6       #> [100] memoise_2.0.1      units_0.8-0        ellipsis_0.3.2     #> [103] here_1.0.1"},{"path":"https://ropengov.github.io/eurostat/articles/vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Vignette for the eurostat R package","text":"Release version (CRAN): Development version (Github): Load package: detailed examples use package, see online tutorial.","code":"install.packages(\"eurostat\") library(remotes) remotes::install_github(\"ropengov/eurostat\")"},{"path":"https://ropengov.github.io/eurostat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Leo Lahti. Author, maintainer. Janne Huovari. Author. Markus Kainu. Author. Przemyslaw Biecek. Author. Daniel Antal. Contributor. Diego Hernangomez. Contributor. Joona Lehtomaki. Contributor. Francois Briatte. Contributor. Reto Stauffer. Contributor. Paul Rougieux. Contributor. Anna Vasylytsya. Contributor. Oliver Reiter. Contributor. Pyry Kantanen. Contributor.","code":""},{"path":"https://ropengov.github.io/eurostat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"(C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. Retrieval analysis Eurostat open data eurostat package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 Package URL: http://ropengov.github.io/eurostat Article URL: https://journal.r-project.org/archive/2017/RJ-2017-019/index.html","code":"@Article{,   title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package},   author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek},   journal = {The R Journal},   volume = {9},   number = {1},   pages = {385--392},   year = {2017},   doi = {10.32614/RJ-2017-019},   url = {https://doi.org/10.32614/RJ-2017-019}, }"},{"path":"https://ropengov.github.io/eurostat/index.html","id":"eurostat-r-package-","dir":"","previous_headings":"","what":"Tools for Eurostat Open Data","title":"Tools for Eurostat Open Data","text":"R tools access open data Eurostat. Data search, download, manipulation visualization.","code":""},{"path":"https://ropengov.github.io/eurostat/index.html","id":"installation-and-use","dir":"","previous_headings":"","what":"Installation and use","title":"Tools for Eurostat Open Data","text":"Install stable version CRAN: Alternatively, install development version GitHub: Development version can also installed using r-universe: package provides several different ways get datasets Eurostat. Searching data one way, know look . See Tutorial resources package homepage information examples.","code":"install.packages(\"eurostat\") # Install from GitHub library(devtools) devtools::install_github(\"ropengov/eurostat\") # Enable this universe options(repos = c(   ropengov = \"https://ropengov.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" ))  install.packages(\"eurostat\") # Load the package library(eurostat)  # Perform a simple search and print a table passengers <- search_eurostat(\"passenger transport\") knitr::kable(head(passengers))"},{"path":"https://ropengov.github.io/eurostat/index.html","id":"recommended-packages","dir":"","previous_headings":"","what":"Recommended packages","title":"Tools for Eurostat Open Data","text":"recommended install giscoR package (https://dieghernan.github.io/giscoR/). another API package provides R tools Eurostat geographic data support geospatial analysis visualization.","code":""},{"path":"https://ropengov.github.io/eurostat/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Tools for Eurostat Open Data","text":"Contributions welcome: Use issue tracker feedback bug reports. Send pull requests Star us Github page Join discussion Gitter","code":""},{"path":"https://ropengov.github.io/eurostat/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Tools for Eurostat Open Data","text":"Kindly cite package follows: Leo Lahti, Przemyslaw Biecek, Markus Kainu Janne Huovari. Retrieval analysis Eurostat open data eurostat package. R Journal 9(1):385-392, 2017. R package version 3.7.10. DOI: 10.32614/RJ-2017-019. URL: https://ropengov.github.io/eurostat/ grateful contributors, including Daniel Antal, Joona Lehtomäki, Francois Briatte, Oliver Reiter, Eurostat open data portal! project part rOpenGov.","code":""},{"path":"https://ropengov.github.io/eurostat/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Tools for Eurostat Open Data","text":"package way officially related endorsed Eurostat. using data retrieved Eurostat database work, please indicate data source Eurostat. re-use involves kind modification data text, please state clearly end user. See Eurostat policy copyright free re-use data detailed information certain exceptions.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/add_nuts_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the statistical aggregation level to data frame — add_nuts_level","title":"Add the statistical aggregation level to data frame — add_nuts_level","text":"Eurostat regional statistics contain country, various regional level information.  many cases, example, mapping, useful filter national level data NUTS2 level regional data, example. function deprecated. Use comprehensive [regions::validate_nuts_regions()] instead.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/add_nuts_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the statistical aggregation level to data frame — add_nuts_level","text":"","code":"add_nuts_level(dat, geo_labels = \"geo\")"},{"path":"https://ropengov.github.io/eurostat/reference/add_nuts_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the statistical aggregation level to data frame — add_nuts_level","text":"dat data frame tibble returned get_eurostat(). geo_labels geographical label, defaults geo.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/add_nuts_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the statistical aggregation level to data frame — add_nuts_level","text":"new numeric variable nuts_level numeric value NUTS level 0 (country), 1 (greater region), 2 (region), 3 (small region).","code":""},{"path":"https://ropengov.github.io/eurostat/reference/add_nuts_level.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add the statistical aggregation level to data frame — add_nuts_level","text":"DEPRECATED FUNCTIONS BACKWARD COMPATIBILITY FUNCTIONS GIVE WARNING CALL APPROPRIATE regions FUNCTIONS","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/add_nuts_level.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add the statistical aggregation level to data frame — add_nuts_level","text":"Daniel Antal","code":""},{"path":"https://ropengov.github.io/eurostat/reference/add_nuts_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add the statistical aggregation level to data frame — add_nuts_level","text":"","code":"dat <- data.frame(   geo    = c(\"FR\", \"IE04\", \"DEB1C\"),   values = c(1000, 23, 12) )  add_nuts_level(dat) #> This function will be deprecated. Use regions::validate_nuts_regions() instead. #>     geo values     typology valid_2016 nuts_level #> 1    FR   1000      country       TRUE          0 #> 2  IE04     23 nuts_level_2       TRUE          2 #> 3 DEB1C     12 nuts_level_3       TRUE          3"},{"path":"https://ropengov.github.io/eurostat/reference/check_access_to_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check access to ec.europe.eu — check_access_to_data","title":"Check access to ec.europe.eu — check_access_to_data","text":"Check R access resources http://ec.europa.eu","code":""},{"path":"https://ropengov.github.io/eurostat/reference/check_access_to_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check access to ec.europe.eu — check_access_to_data","text":"","code":"check_access_to_data()"},{"path":"https://ropengov.github.io/eurostat/reference/check_access_to_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check access to ec.europe.eu — check_access_to_data","text":"logical.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/check_access_to_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check access to ec.europe.eu — check_access_to_data","text":"Markus Kainu markus.kainu@kapsi.fi","code":""},{"path":"https://ropengov.github.io/eurostat/reference/check_access_to_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check access to ec.europe.eu — check_access_to_data","text":"","code":"# \\donttest{ check_access_to_data() #> [1] TRUE # }"},{"path":"https://ropengov.github.io/eurostat/reference/clean_eurostat_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Eurostat Cache — clean_eurostat_cache","title":"Clean Eurostat Cache — clean_eurostat_cache","text":"Delete .rds files eurostat cache directory. See get_eurostat() cache.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/clean_eurostat_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Eurostat Cache — clean_eurostat_cache","text":"","code":"clean_eurostat_cache(cache_dir = NULL, config = FALSE)"},{"path":"https://ropengov.github.io/eurostat/reference/clean_eurostat_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Eurostat Cache — clean_eurostat_cache","text":"cache_dir path cache directory. NULL (default) tries clean default temporary cache directory. config Logical TRUE/FALSE. cached path deleted?","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/clean_eurostat_cache.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clean Eurostat Cache — clean_eurostat_cache","text":"Przemyslaw Biecek, Leo Lahti, Janne Huovari, Markus Kainu Diego Hernangómez","code":""},{"path":"https://ropengov.github.io/eurostat/reference/clean_eurostat_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Eurostat Cache — clean_eurostat_cache","text":"","code":"if (FALSE) { clean_eurostat_cache() }"},{"path":"https://ropengov.github.io/eurostat/reference/convert_time_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Column Conversions — convert_time_col","title":"Time Column Conversions — convert_time_col","text":"Internal function convert time column.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/convert_time_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Column Conversions — convert_time_col","text":"","code":"convert_time_col(x, time_format)"},{"path":"https://ropengov.github.io/eurostat/reference/convert_time_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Column Conversions — convert_time_col","text":"x time column (vector) time_format see tidy_eurostat()","code":""},{"path":"https://ropengov.github.io/eurostat/reference/cut_to_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Cuts the Values Column into Classes and Polishes the Labels — cut_to_classes","title":"Cuts the Values Column into Classes and Polishes the Labels — cut_to_classes","text":"Categorises numeric vector automatic manually defined categories polishes labels ready used mapping ggplot2.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/cut_to_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuts the Values Column into Classes and Polishes the Labels — cut_to_classes","text":"","code":"cut_to_classes(   x,   n = 5,   style = \"equal\",   manual = FALSE,   manual_breaks = NULL,   decimals = 0,   nodata_label = \"No data\" )"},{"path":"https://ropengov.github.io/eurostat/reference/cut_to_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuts the Values Column into Classes and Polishes the Labels — cut_to_classes","text":"x numeric vector, eg. values variable data returned get_eurostat(). n numeric. number classes/categories style chosen style: one \"fixed\", \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\", \"dpih\" \"headtails\" manual Logical. manual breaks used manual_breaks Numeric vector manual threshold values decimals Number decimals include labels nodata_label String. Text label NA category.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/cut_to_classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cuts the Values Column into Classes and Polishes the Labels — cut_to_classes","text":"factor.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/cut_to_classes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cuts the Values Column into Classes and Polishes the Labels — cut_to_classes","text":"Markus Kainu markuskainu@gmail.com","code":""},{"path":"https://ropengov.github.io/eurostat/reference/cut_to_classes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cuts the Values Column into Classes and Polishes the Labels — cut_to_classes","text":"","code":"# \\donttest{ # lp <- get_eurostat(\"nama_aux_lp\") lp <- get_eurostat(\"nama_10_lp_ulc\") #> Table nama_10_lp_ulc cached at /tmp/RtmpBLpMpp/eurostat/nama_10_lp_ulc_date_code_FF.rds lp$class <- cut_to_classes(lp$values, n = 5, style = \"equal\", decimals = 1) #> Warning: var has missing values, omitted in finding classes #> Warning: var has missing values, omitted in finding classes # }"},{"path":"https://ropengov.github.io/eurostat/reference/dic_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Order of Variable Levels from Eurostat Dictionary. — dic_order","title":"Order of Variable Levels from Eurostat Dictionary. — dic_order","text":"Orders factor levels.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/dic_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order of Variable Levels from Eurostat Dictionary. — dic_order","text":"","code":"dic_order(x, dic, type)"},{"path":"https://ropengov.github.io/eurostat/reference/dic_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order of Variable Levels from Eurostat Dictionary. — dic_order","text":"x variable (code labelled) get order . dic name dictionary. Correspond variable name data_frame get_eurostat(). Can also data_frame get_eurostat_dic(). type type x. code label.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/dic_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order of Variable Levels from Eurostat Dictionary. — dic_order","text":"numeric vector orders.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/dic_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Order of Variable Levels from Eurostat Dictionary. — dic_order","text":"variables, like classifications, logical conventional ordering. Eurostat data tables necessary ordered order. function dic_order() get ordering Eurostat classifications dictionaries. function label_eurostat() can also order factor levels labels argument eu_order = TRUE.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/dic_order.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Order of Variable Levels from Eurostat Dictionary. — dic_order","text":"Przemyslaw Biecek, Leo Lahti, Janne Huovari Markus Kainu","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eu_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Countries and Country Codes — eu_countries","title":"Countries and Country Codes — eu_countries","text":"Countries country codes EU, Euro area, EFTA EU candidate countries.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eu_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Countries and Country Codes — eu_countries","text":"","code":"eu_countries  ea_countries  efta_countries  eu_candidate_countries"},{"path":"https://ropengov.github.io/eurostat/reference/eu_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Countries and Country Codes — eu_countries","text":"data_frame: code: Country code Eurostat database. name: Country name English. label: Country name Eurostat database. object class data.frame 19 rows 3 columns. object class data.frame 4 rows 3 columns. object class data.frame 5 rows 3 columns.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eu_countries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Countries and Country Codes — eu_countries","text":"https://ec.europa.eu/eurostat/statistics-explained/index.php/Tutorial:Country_codes_and_protocol_order, https://ec.europa.eu/eurostat/statistics-explained/index.php/Glossary:Euro_area","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurostat-package.html","id":null,"dir":"Reference","previous_headings":"","what":"R Tools for Eurostat open data — eurostat-package","title":"R Tools for Eurostat open data — eurostat-package","text":"Brief summary eurostat package","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurostat-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R Tools for Eurostat open data — eurostat-package","text":"R Tools Eurostat Open Data","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurostat-package.html","id":"regions-functions","dir":"Reference","previous_headings":"","what":"regions functions","title":"R Tools for Eurostat open data — eurostat-package","text":"working sub-national statistics basic functions regions package imported https://regions.dataobservatory.eu/.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurostat-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"R Tools for Eurostat open data — eurostat-package","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/eurostat-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R Tools for Eurostat open data — eurostat-package","text":"Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurostat-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R Tools for Eurostat open data — eurostat-package","text":"","code":"library(eurostat)"},{"path":"https://ropengov.github.io/eurostat/reference/eurostat_geodata_60_2016.html","id":null,"dir":"Reference","previous_headings":"","what":"Geospatial data of Europe from Gisco in 1:60 million scale from\nyear 2016 — eurostat_geodata_60_2016","title":"Geospatial data of Europe from Gisco in 1:60 million scale from\nyear 2016 — eurostat_geodata_60_2016","text":"Geospatial data Europe Gisco 1:60 million scale year 2016","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurostat_geodata_60_2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geospatial data of Europe from Gisco in 1:60 million scale from\nyear 2016 — eurostat_geodata_60_2016","text":"","code":"eurostat_geodata_60_2016"},{"path":"https://ropengov.github.io/eurostat/reference/eurostat_geodata_60_2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geospatial data of Europe from Gisco in 1:60 million scale from\nyear 2016 — eurostat_geodata_60_2016","text":"sf id: Country code Eurostat database. CNTRY_CODE: Country code. NUTS_NAME: NUTS name local language. LEVL_CODE: NUTS code. FID: Country code. NUTS_ID: NUTS code. geometry: geospatial information. geo: NUTS code.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurostat_geodata_60_2016.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Geospatial data of Europe from Gisco in 1:60 million scale from\nyear 2016 — eurostat_geodata_60_2016","text":"https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2date.html","id":null,"dir":"Reference","previous_headings":"","what":"Date Conversion from Eurostat Time Format — eurotime2date","title":"Date Conversion from Eurostat Time Format — eurotime2date","text":"Date conversion Eurostat time format. function convert Eurostat time values objects class Date() representing calendar dates.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date Conversion from Eurostat Time Format — eurotime2date","text":"","code":"eurotime2date(x, last = FALSE)"},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date Conversion from Eurostat Time Format — eurotime2date","text":"x charter string time information Eurostat time format. last logical. FALSE (default) date  first date period (month, quarter year). TRUE date last date period.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date Conversion from Eurostat Time Format — eurotime2date","text":"object class Date().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2date.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Date Conversion from Eurostat Time Format — eurotime2date","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Date Conversion from Eurostat Time Format — eurotime2date","text":"Janne Huovari janne.huovari@ptt.fi","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date Conversion from Eurostat Time Format — eurotime2date","text":"","code":"# \\donttest{ na_q <- get_eurostat(\"namq_10_pc\", time_format = \"raw\") #> Table namq_10_pc cached at /tmp/RtmpBLpMpp/eurostat/namq_10_pc_raw_code_FF.rds na_q$time <- eurotime2date(x = na_q$time) unique(na_q$time) #>   [1] \"2021-10-01\" \"2021-07-01\" \"2021-04-01\" \"2021-01-01\" \"2020-10-01\" #>   [6] \"2020-07-01\" \"2020-04-01\" \"2020-01-01\" \"2019-10-01\" \"2019-07-01\" #>  [11] \"2019-04-01\" \"2019-01-01\" \"2018-10-01\" \"2018-07-01\" \"2018-04-01\" #>  [16] \"2018-01-01\" \"2017-10-01\" \"2017-07-01\" \"2017-04-01\" \"2017-01-01\" #>  [21] \"2016-10-01\" \"2016-07-01\" \"2016-04-01\" \"2016-01-01\" \"2015-10-01\" #>  [26] \"2015-07-01\" \"2015-04-01\" \"2015-01-01\" \"2014-10-01\" \"2014-07-01\" #>  [31] \"2014-04-01\" \"2014-01-01\" \"2013-10-01\" \"2013-07-01\" \"2013-04-01\" #>  [36] \"2013-01-01\" \"2012-10-01\" \"2012-07-01\" \"2012-04-01\" \"2012-01-01\" #>  [41] \"2011-10-01\" \"2011-07-01\" \"2011-04-01\" \"2011-01-01\" \"2010-10-01\" #>  [46] \"2010-07-01\" \"2010-04-01\" \"2010-01-01\" \"2009-10-01\" \"2009-07-01\" #>  [51] \"2009-04-01\" \"2009-01-01\" \"2008-10-01\" \"2008-07-01\" \"2008-04-01\" #>  [56] \"2008-01-01\" \"2007-10-01\" \"2007-07-01\" \"2007-04-01\" \"2007-01-01\" #>  [61] \"2006-10-01\" \"2006-07-01\" \"2006-04-01\" \"2006-01-01\" \"2005-10-01\" #>  [66] \"2005-07-01\" \"2005-04-01\" \"2005-01-01\" \"2004-10-01\" \"2004-07-01\" #>  [71] \"2004-04-01\" \"2004-01-01\" \"2003-10-01\" \"2003-07-01\" \"2003-04-01\" #>  [76] \"2003-01-01\" \"2002-10-01\" \"2002-07-01\" \"2002-04-01\" \"2002-01-01\" #>  [81] \"2001-10-01\" \"2001-07-01\" \"2001-04-01\" \"2001-01-01\" \"2000-10-01\" #>  [86] \"2000-07-01\" \"2000-04-01\" \"2000-01-01\" \"1999-10-01\" \"1999-07-01\" #>  [91] \"1999-04-01\" \"1999-01-01\" \"1998-10-01\" \"1998-07-01\" \"1998-04-01\" #>  [96] \"1998-01-01\" \"1997-10-01\" \"1997-07-01\" \"1997-04-01\" \"1997-01-01\" #> [101] \"1996-10-01\" \"1996-07-01\" \"1996-04-01\" \"1996-01-01\" \"1995-10-01\" #> [106] \"1995-07-01\" \"1995-04-01\" \"1995-01-01\" \"1994-10-01\" \"1994-07-01\" #> [111] \"1994-04-01\" \"1994-01-01\" \"1993-10-01\" \"1993-07-01\" \"1993-04-01\" #> [116] \"1993-01-01\" \"1992-10-01\" \"1992-07-01\" \"1992-04-01\" \"1992-01-01\" #> [121] \"1991-10-01\" \"1991-07-01\" \"1991-04-01\" \"1991-01-01\" \"1990-10-01\" #> [126] \"1990-07-01\" \"1990-04-01\" \"1990-01-01\" \"1989-10-01\" \"1989-07-01\" #> [131] \"1989-04-01\" \"1989-01-01\" \"1988-10-01\" \"1988-07-01\" \"1988-04-01\" #> [136] \"1988-01-01\" \"1987-10-01\" \"1987-07-01\" \"1987-04-01\" \"1987-01-01\" #> [141] \"1986-10-01\" \"1986-07-01\" \"1986-04-01\" \"1986-01-01\" \"1985-10-01\" #> [146] \"1985-07-01\" \"1985-04-01\" \"1985-01-01\" \"1984-10-01\" \"1984-07-01\" #> [151] \"1984-04-01\" \"1984-01-01\" \"1983-10-01\" \"1983-07-01\" \"1983-04-01\" #> [156] \"1983-01-01\" \"1982-10-01\" \"1982-07-01\" \"1982-04-01\" \"1982-01-01\" #> [161] \"1981-10-01\" \"1981-07-01\" \"1981-04-01\" \"1981-01-01\" \"1980-10-01\" #> [166] \"1980-07-01\" \"1980-04-01\" \"1980-01-01\" # }"},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2num.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of Eurostat Time Format to Numeric — eurotime2num","title":"Conversion of Eurostat Time Format to Numeric — eurotime2num","text":"conversion Eurostat time format numeric.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of Eurostat Time Format to Numeric — eurotime2num","text":"","code":"eurotime2num(x)"},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of Eurostat Time Format to Numeric — eurotime2num","text":"x charter string time information Eurostat time format.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of Eurostat Time Format to Numeric — eurotime2num","text":"see .numeric().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2num.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion of Eurostat Time Format to Numeric — eurotime2num","text":"Bi-annual, quarterly monthly data presented fraction year beginning period. Conversion daily data supported.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2num.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conversion of Eurostat Time Format to Numeric — eurotime2num","text":"Janne Huovari janne.huovari@ptt.fi","code":""},{"path":"https://ropengov.github.io/eurostat/reference/eurotime2num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of Eurostat Time Format to Numeric — eurotime2num","text":"","code":"# \\donttest{ na_q <- get_eurostat(\"namq_10_pc\", time_format = \"raw\") #> Reading cache file /tmp/RtmpBLpMpp/eurostat/namq_10_pc_raw_code_FF.rds #> Table  namq_10_pc  read from cache file:  /tmp/RtmpBLpMpp/eurostat/namq_10_pc_raw_code_FF.rds na_q$time <- eurotime2num(x = na_q$time)  unique(na_q$time) #>   [1] 2021.75 2021.50 2021.25 2021.00 2020.75 2020.50 2020.25 2020.00 2019.75 #>  [10] 2019.50 2019.25 2019.00 2018.75 2018.50 2018.25 2018.00 2017.75 2017.50 #>  [19] 2017.25 2017.00 2016.75 2016.50 2016.25 2016.00 2015.75 2015.50 2015.25 #>  [28] 2015.00 2014.75 2014.50 2014.25 2014.00 2013.75 2013.50 2013.25 2013.00 #>  [37] 2012.75 2012.50 2012.25 2012.00 2011.75 2011.50 2011.25 2011.00 2010.75 #>  [46] 2010.50 2010.25 2010.00 2009.75 2009.50 2009.25 2009.00 2008.75 2008.50 #>  [55] 2008.25 2008.00 2007.75 2007.50 2007.25 2007.00 2006.75 2006.50 2006.25 #>  [64] 2006.00 2005.75 2005.50 2005.25 2005.00 2004.75 2004.50 2004.25 2004.00 #>  [73] 2003.75 2003.50 2003.25 2003.00 2002.75 2002.50 2002.25 2002.00 2001.75 #>  [82] 2001.50 2001.25 2001.00 2000.75 2000.50 2000.25 2000.00 1999.75 1999.50 #>  [91] 1999.25 1999.00 1998.75 1998.50 1998.25 1998.00 1997.75 1997.50 1997.25 #> [100] 1997.00 1996.75 1996.50 1996.25 1996.00 1995.75 1995.50 1995.25 1995.00 #> [109] 1994.75 1994.50 1994.25 1994.00 1993.75 1993.50 1993.25 1993.00 1992.75 #> [118] 1992.50 1992.25 1992.00 1991.75 1991.50 1991.25 1991.00 1990.75 1990.50 #> [127] 1990.25 1990.00 1989.75 1989.50 1989.25 1989.00 1988.75 1988.50 1988.25 #> [136] 1988.00 1987.75 1987.50 1987.25 1987.00 1986.75 1986.50 1986.25 1986.00 #> [145] 1985.75 1985.50 1985.25 1985.00 1984.75 1984.50 1984.25 1984.00 1983.75 #> [154] 1983.50 1983.25 1983.00 1982.75 1982.50 1982.25 1982.00 1981.75 1981.50 #> [163] 1981.25 1981.00 1980.75 1980.50 1980.25 1980.00 # }"},{"path":"https://ropengov.github.io/eurostat/reference/get_bibentry.html","id":null,"dir":"Reference","previous_headings":"","what":"Create A Data Bibliography — get_bibentry","title":"Create A Data Bibliography — get_bibentry","text":"Creates bibliography selected Eurostat data files, including last Eurostat update, URL access data, optional keywords set user.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_bibentry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create A Data Bibliography — get_bibentry","text":"","code":"get_bibentry(code, keywords = NULL, format = \"Biblatex\")"},{"path":"https://ropengov.github.io/eurostat/reference/get_bibentry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create A Data Bibliography — get_bibentry","text":"code Eurostat data code vector Eurostat data codes character factor. keywords list keywords added entries. Defaults NULL. format Default 'Biblatex', alternatives 'bibentry' 'Bibtex' (case sensitive.)","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_bibentry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create A Data Bibliography — get_bibentry","text":"bibentry, Bibtex Biblatex object.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_bibentry.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create A Data Bibliography — get_bibentry","text":"Daniel Antal, Przemyslaw Biecek","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_bibentry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create A Data Bibliography — get_bibentry","text":"","code":"my_bibliography <- get_bibentry(   code = c(\"tran_hv_frtra\", \"t2020_rk310\", \"tec00001\"),   keywords = list(     c(\"railways\", \"freight\", \"transport\"),     c(\"railways\", \"passengers\", \"modal split\")   ),   format = \"Biblatex\" ) my_bibliography #> @Misc{tran_hv_frtra_25-03-2021, #>   title = {Volume of freight transport relative to GDP [tran_hv_frtra]}, #>   url = {https://ec.europa.eu/eurostat/web/products-datasets/-/tran_hv_frtra}, #>   language = {en}, #>   year = {25.03.2021}, #>   publisher = {Eurostat}, #>   author = {{Eurostat}}, #>   keywords = {railways, freight, transport}, #>   urldate = {2022-03-16}, #> } #>  #> @Misc{tec00001_16-03-2022, #>   title = {Gross domestic product at market prices [t2020_rk310]}, #>   url = {https://ec.europa.eu/eurostat/web/products-datasets/-/t2020_rk310}, #>   language = {en}, #>   year = {16.03.2022}, #>   publisher = {Eurostat}, #>   author = {{Eurostat}}, #>   keywords = {railways, passengers, modal split}, #>   urldate = {2022-03-16}, #> } #>  #> @Misc{t2020_rk310_07-07-2021, #>   title = {Modal split of passenger transport [tec00001]}, #>   url = {https://ec.europa.eu/eurostat/web/products-datasets/-/tec00001}, #>   language = {en}, #>   year = {07.07.2021}, #>   publisher = {Eurostat}, #>   author = {{Eurostat}}, #>   urldate = {2022-03-16}, #> }"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Eurostat Data — get_eurostat","title":"Read Eurostat Data — get_eurostat","text":"Download data sets Eurostat https://ec.europa.eu/eurostat/.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Eurostat Data — get_eurostat","text":"","code":"get_eurostat(   id,   time_format = \"date\",   filters = \"none\",   type = \"code\",   select_time = NULL,   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   compress_file = TRUE,   stringsAsFactors = FALSE,   keepFlags = FALSE,   ... )"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Eurostat Data — get_eurostat","text":"id code name dataset interest. See search_eurostat() details get code. time_format string giving type conversion time column eurostat format. \"date\" (default) converts Date() first date period. \"date_last\" converts Date() last date period. \"num\" converts numeric \"raw\" conversion. See eurotime2date() eurotime2num(). filters \"none\" (default) get whole dataset named list filters get just part table. Names list objects Eurostat variable codes values vectors observation codes. NULL whole dataset returned via API. details. See filters limitations per query via API get_eurostat_json(). type type variables, \"code\" (default) \"label\". select_time character symbol time frequency NULL, used default datasets just one time frequency. datasets multiple time frequencies, select desired time format : Y = annual, S = semi-annual, Q = quarterly, M = monthly. frequencies data frame time_format = \"raw\" used. cache logical whether caching. Default TRUE. Affects queries bulk download facility. update_cache logical whether update cache. Can set also options(eurostat_update = TRUE) cache_dir path cache directory. directory must exist. NULL (default) uses creates 'eurostat' directory temporary directory tempdir(). directory can also set set_eurostat_cache_dir(). compress_file logical whether compress RDS-file caching. Default TRUE. stringsAsFactors TRUE (default) variables converted factors original Eurostat order. FALSE returned character. keepFlags logical whether flags (e.g. \"confidential\", \"provisional\") kept separate column can removed. Default FALSE. flag values see: https://ec.europa.eu/eurostat/data/database/information. Also possible non-real zero \"0n\" indicated flags column. Flags available eurostat API, keepFlags can used filters. ... Arguments passed get_eurostat_json lang language used metadata (en/fr/de).","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Eurostat Data — get_eurostat","text":"tibble. One column dimension data, time column time dimension values column numerical values. Eurostat data include missing values treatment missing values depend source. bulk download facility missing values dropped dimensions missing particular time. JSON API missing values dropped dimensions missing times. data bulk download facility can completed example tidyr::complete().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Eurostat Data — get_eurostat","text":"Data sets downloaded Eurostat bulk download facility Eurostat Web Services JSON API. table id given, whole table downloaded bulk download facility. also filters defined JSON API used. bulk download facility fastest method download whole datasets. also often way JSON API limitation maximum 50 sub-indicators time whole datasets usually exceeds . Also, seems multi frequency datasets can retrieved via bulk download facility select_time available JSON API method. connection thru proxy, probably set proxy parameters use JSON API, see get_eurostat_json(). default datasets bulk download facility cached often rather large. Caching (currently) possible datasets JSON API. Cache files stored temporary directory default named directory (See set_eurostat_cache_dir()). cache can emptied clean_eurostat_cache(). id, code, dataset can searched search_eurostat() Eurostat database https://ec.europa.eu/eurostat/data/database. Eurostat database gives codes Data Navigation Tree every dataset parenthesis.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Eurostat Data — get_eurostat","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Eurostat Data — get_eurostat","text":"Przemyslaw Biecek, Leo Lahti, Janne Huovari Markus Kainu","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Eurostat Data — get_eurostat","text":"","code":"# \\donttest{ k <- get_eurostat(\"nama_10_lp_ulc\") #> Reading cache file /tmp/RtmpBLpMpp/eurostat/nama_10_lp_ulc_date_code_FF.rds #> Table  nama_10_lp_ulc  read from cache file:  /tmp/RtmpBLpMpp/eurostat/nama_10_lp_ulc_date_code_FF.rds k <- get_eurostat(\"nama_10_lp_ulc\", time_format = \"num\") #> Table nama_10_lp_ulc cached at /tmp/RtmpBLpMpp/eurostat/nama_10_lp_ulc_num_code_FF.rds k <- get_eurostat(\"nama_10_lp_ulc\", update_cache = TRUE) #> Table nama_10_lp_ulc cached at /tmp/RtmpBLpMpp/eurostat/nama_10_lp_ulc_date_code_FF.rds  k <- get_eurostat(\"nama_10_lp_ulc\",   cache_dir = file.path(tempdir(), \"r_cache\") ) #> Table nama_10_lp_ulc cached at /tmp/RtmpBLpMpp/r_cache/nama_10_lp_ulc_date_code_FF.rds options(eurostat_update = TRUE) k <- get_eurostat(\"nama_10_lp_ulc\") #> Table nama_10_lp_ulc cached at /tmp/RtmpBLpMpp/eurostat/nama_10_lp_ulc_date_code_FF.rds options(eurostat_update = FALSE)  set_eurostat_cache_dir(file.path(tempdir(), \"r_cache2\")) #> eurostat cache dir is: /tmp/RtmpBLpMpp/r_cache2 #> To install your cache_dir path for use in future sessions, #> run this function with `install = TRUE`. k <- get_eurostat(\"nama_10_lp_ulc\") #> Table nama_10_lp_ulc cached at /tmp/RtmpBLpMpp/r_cache2/nama_10_lp_ulc_date_code_FF.rds k <- get_eurostat(\"nama_10_lp_ulc\", cache = FALSE) k <- get_eurostat(\"avia_gonc\", select_time = \"Y\", cache = FALSE) # } if (FALSE) { dd <- get_eurostat(\"nama_10_gdp\",   filters = list(     geo = \"FI\",     na_item = \"B1GQ\",     unit = \"CLV_I10\"   ) ) }"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Eurostat Dictionary — get_eurostat_dic","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"Download Eurostat dictionary.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"","code":"get_eurostat_dic(dictname, lang = \"en\")"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"dictname character, dictionary variable downloaded. lang character, language code. Options: \"en\" (default), \"fr\", \"de\".","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"tibble two columns: code names full names.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"given coded variable Eurostat https://ec.europa.eu/eurostat/. dictionaries link codes human-readable labels. translate codes labels, use label_eurostat().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"Przemyslaw Biecek Leo Lahti leo.lahti@iki.fi. Thanks Wietse Dol contributions.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Eurostat Dictionary — get_eurostat_dic","text":"","code":"# \\donttest{ get_eurostat_dic(\"crop_pro\") #> # A tibble: 224 × 2 #>    code_name full_name                                                     #>    <chr>     <chr>                                                         #>  1 C1040     Cereals for the production of grain (including rice and seed) #>  2 C1050     Cereals (excluding rice)                                      #>  3 C1100     Wheat (including spelt)                                       #>  4 C1120     Common wheat and spelt                                        #>  5 C1123     Common winter wheat                                           #>  6 C1124     Common spring wheat                                           #>  7 C1130     Durum wheat                                                   #>  8 C1133     Winter durum wheat                                            #>  9 C1134     Spring durum wheat                                            #> 10 C1140     Rye and maslin                                                #> # … with 214 more rows  # Try another language get_eurostat_dic(\"crop_pro\", lang = \"fr\") #> # A tibble: 224 × 2 #>    code_name full_name                                                      #>    <chr>     <chr>                                                          #>  1 C1040     Céréales pour la production de grains (riz et semence compris) #>  2 C1050     Céréales (à l'exception du riz)                                #>  3 C1100     Blé (épeautre compris)                                         #>  4 C1120     Blé tendre et épeautre                                         #>  5 C1123     Blé tendre d'hiver                                             #>  6 C1124     Blé tendre de printemps                                        #>  7 C1130     Blé dur                                                        #>  8 C1133     Blé dur d'hiver                                                #>  9 C1134     Blé dur de printemps                                           #> 10 C1140     Seigle et méteil                                               #> # … with 214 more rows # }"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_geospatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Geospatial Data from GISCO — get_eurostat_geospatial","title":"Download Geospatial Data from GISCO — get_eurostat_geospatial","text":"Downloads either simple features (sf), SpatialPolygonDataFrame data_frame preprocessed using broom::tidy().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_geospatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Geospatial Data from GISCO — get_eurostat_geospatial","text":"","code":"get_eurostat_geospatial(   output_class = \"sf\",   resolution = \"60\",   nuts_level = \"all\",   year = \"2016\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   crs = \"4326\",   make_valid = FALSE )"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_geospatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Geospatial Data from GISCO — get_eurostat_geospatial","text":"output_class string. Class object returned, either sf simple features, df (data_frame) spdf (SpatialPolygonDataFrame) resolution Resolution geospatial data. One \"60\" (1:60million), \"20\" (1:20million) \"10\" (1:10million) \"03\" (1:3million) \"01\" (1:1million). nuts_level Level NUTS classification geospatial data. One \"0\", \"1\", \"2\", \"3\" \"\" (mimics original behaviour) year NUTS release year. One \"2003\", \"2006\", \"2010\", \"2013\", \"2016\" \"2021\" cache logical whether caching. Default TRUE. Affects queries bulk download facility. update_cache logical whether update cache. Can set also options(eurostat_update = TRUE) cache_dir path cache directory. directory exist. NULL (default) uses creates 'eurostat' directory temporary directory tempdir(). Directory can also set option eurostat_cache_dir. crs projection map: 4-digit EPSG code. One : \"4326\" - WGS84 \"3035\" - ETRS89 / ETRS-LAEA \"3857\" - Pseudo-Mercator make_valid logical; ensure valid (multi-)polygon features returned output_class=\"sf\", see Details. Current default FALSE, changed future.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_geospatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Geospatial Data from GISCO — get_eurostat_geospatial","text":"sf, data_frame SpatialPolygonDataFrame.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_geospatial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Geospatial Data from GISCO — get_eurostat_geospatial","text":"data source URL https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/administrative-units-statistical-units. source provides feature collections line strings (GeoJSON format), (multi-)polygons , cases, yields invalid self-intersecting (multi-)polygon geometries (years/resolutions). can cause problems, e.g., using geometries input argument sf::st_interpolate_aw(). make_valid = TRUE makes sure valid (multi-)polygons returned, example included .","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_geospatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Geospatial Data from GISCO — get_eurostat_geospatial","text":"Markus Kainu markuskainu@gmail.com","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_geospatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Geospatial Data from GISCO — get_eurostat_geospatial","text":"","code":"# \\donttest{ sf <- get_eurostat_geospatial(   output_class = \"sf\",   resolution = \"60\",   nuts_level = \"all\" ) #> Loading required namespace: sf #> sf at resolution 1:60 read from local file #> Warning: Default of 'make_valid' for 'output_class=\"sf\"' will be changed in the future (see function details). df <- get_eurostat_geospatial(   output_class = \"df\",   resolution = \"20\",   nuts_level = \"0\" ) #> Object cached at /tmp/RtmpBLpMpp/r_cache2/df20020164326.RData #> No encoding supplied: defaulting to UTF-8. #> Regions defined for each Polygons #> Joining, by = \"id\" #> data_frame at resolution 1: 20  cached at:  /tmp/RtmpBLpMpp/r_cache2/df20020164326.RData #> Warning: Default of 'make_valid' for 'output_class=\"sf\"' will be changed in the future (see function details). # }  if (FALSE) { spdf <- get_eurostat_geospatial(   output_class = \"spdf\",   resolution = \"10\",   nuts_level = \"3\" ) }  if (FALSE) { # ------------------------------------------------------------------- # Minimal example to demonstrate reason/effect of 'make_valid = TRUE' # Spatial data set; rectangle spanning the entire globe with a constant value of 1L. # Requires the R package sf. library(\"sf\") d <- c(-180, -90, -180, 90, 180, 90, 180, -90, -180, -90) poly <- st_polygon(list(matrix(d, ncol = 2, byrow = TRUE))) data <- st_sf(data.frame(geom = st_sfc(poly), data = 1L),   crs = st_crs(4326) )  # Causing an error: Self-intersection of some points of the geometry NUTS2_A <- get_eurostat_geospatial(\"sf\", 60,   nuts_level = 2, year = 2013,   crs = 4326, make_valid = FALSE ) res <- tryCatch(st_interpolate_aw(data, NUTS2_A, extensive = FALSE),   error = function(e) e ) print(res)  # Resolving the problem using # make_valid = TRUE. 'extensive = FALSE' returns # average over each area, thus resulting in a # constant value of 1 for each geometry in NUTS2_B. NUTS2_B <- get_eurostat_geospatial(\"sf\", 60,   nuts_level = 2, year = 2013,   crs = 4326, make_valid = TRUE ) res <- st_interpolate_aw(data, NUTS2_B, extensive = FALSE) print(head(res)) }"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data from Eurostat API in JSON — get_eurostat_json","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"Retrieve data Eurostat API JSON format.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"","code":"get_eurostat_json(   id,   filters = NULL,   type = c(\"code\", \"label\", \"both\"),   lang = c(\"en\", \"fr\", \"de\"),   stringsAsFactors = FALSE,   ... )"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"id code name dataset interested. See table contents eurostat datasets details. filters named list filters. Names list objects Eurostat variable codes values vectors observation codes. NULL (default) whole dataset returned. See details filters limitations per query. type type variables, \"code\" (default), \"label\" \"\". \"\" return data_frame named vectors, labels values codes names. lang language used metadata (en/fr/de). stringsAsFactors TRUE (default) variables converted factors original Eurostat order. FALSE returned character. ... Arguments passed httr::GET url url page retrieve config Additional configuration settings http authentication (authenticate()), additional headers (add_headers()), cookies (set_cookies()) etc. See config() full details list helpers. handle handle use request. supplied, retrieved reused handle_pool() based scheme, hostname port url. default httr requests scheme/host/port combo. substantially reduces connection time, ensures cookies maintained multiple requests host. See handle_pool() details.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"dataset data_frame.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"Data retrieve Eurostat Web Services can specified filters. Normally, better use JSON query get_eurostat(), use get_eurostat_json() directly. Queries limited 50 sub-indicators time. time can filtered fixed \"time\" filter \"sinceTimePeriod\" \"lastTimePeriod\" filters. sinceTimePeriod = 2000 returns observations 2000 last available. lastTimePeriod = 10 returns 10 last observations. use proxy connect, httr::use_proxy() can passed httr::GET(). example get_eurostat_json(id, filters, config = httr::use_proxy(url, port, username, password)).","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"Przemyslaw Biecek, Leo Lahti, Janne Huovari Markus Kainu","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Data from Eurostat API in JSON — get_eurostat_json","text":"","code":"# nama_gdp_c has been discontinued since 2/2018 and this example has ceased working. if (FALSE) { tmp <- get_eurostat_json(\"cdh_e_fos\") yy <- get_eurostat_json(id = \"nama_gdp_c\", filters = list(   geo = c(\"EU28\", \"FI\"),   unit = \"EUR_HAB\",   indic_na = \"B1GM\" )) }"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Data from Eurostat Database — get_eurostat_raw","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"Download data eurostat database.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"","code":"get_eurostat_raw(id)"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"id code name dataset interested. See table contents eurostat datasets details.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"dataset tibble format. First column contains comma separated codes cases. columns usually corresponds years column names years preceding X. Data character format contains values together eurostat flags data.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"Data downloaded https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing transformed tabular format.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"Przemyslaw Biecek, Leo Lahti Janne Huovari","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Data from Eurostat Database — get_eurostat_raw","text":"","code":"# \\donttest{ eurostat:::get_eurostat_raw(\"educ_iste\") #> # A tibble: 213 × 16 #>    `indic_ed,geo\\\\time` `2012` `2011` `2010` `2009` `2008` `2007` `2006` `2005` #>    <chr>                <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  #>  1 ST1_1,AL             NA     NA     NA     NA     NA     NA     NA     NA     #>  2 ST1_1,AT             10.1   10.2   10.4   10.6   11.0   11.5   11.7   11.8   #>  3 ST1_1,BE             10.5 d 10.5 d 10.5 d 10.5 d 10.8 d 10.8 d 10.9 d 10.8 d #>  4 ST1_1,BE_FRA         NA     10.1   10.2   10.3   NA     10.4   10.4   NA     #>  5 ST1_1,BE_VLA         NA     10.8   10.7   10.7   11.0   11.1   11.2   NA     #>  6 ST1_1,BG             13.9   13.8   13.6   13.5   12.8   12.8   12.9   13.2   #>  7 ST1_1,CY             11.5   11.4   11.5   11.8   12.3   13.0   14.0   14.1   #>  8 ST1_1,CZ             13.2   13.3   14.2 d 14.2 d 14.2 d 14.5 d 13.4   14.4   #>  9 ST1_1,DE             15.4   15.7   16.1   16.6   16.7   16.9   17.2   17.2   #> 10 ST1_1,DK             : u    : u    : u    : u    : u    : u    : u    : u    #> # … with 203 more rows, and 7 more variables: `2004` <chr>, `2003` <chr>, #> #   `2002` <chr>, `2001` <chr>, `2000` <chr>, `1999` <chr>, `1998` <chr> # }"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","title":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","text":"Download table contents (TOC) eurostat datasets.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","text":"","code":"get_eurostat_toc()"},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_toc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","text":"tibble eight columns: title: name dataset theme. code: codename dataset theme, used get_eurostat() get_eurostat_raw() functions. type: dataset, folder table. last.update..data, last.table.structure.change, data.start, data.end: Dates.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_toc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","text":"TOC downloaded https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?sort=1&file=table_of_contents_en.txt. values column 'code' used download selected dataset.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_toc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_toc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","text":"Przemyslaw Biecek Leo Lahti ropengov-forum@googlegroups.com","code":""},{"path":"https://ropengov.github.io/eurostat/reference/get_eurostat_toc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Table of Contents of Eurostat Data Sets — get_eurostat_toc","text":"","code":"# \\donttest{ tmp <- get_eurostat_toc() head(tmp) #> # A tibble: 6 × 8 #>   title    code  type  `last update o…` `last table st…` `data start` `data end` #>   <chr>    <chr> <chr> <chr>            <chr>            <chr>        <chr>      #> 1 Databas… data  fold… NA               NA               NA           NA         #> 2 General… gene… fold… NA               NA               NA           NA         #> 3 Europea… euro… fold… NA               NA               NA           NA         #> 4 Busines… ei_b… fold… NA               NA               NA           NA         #> 5 Consume… ei_b… fold… NA               NA               NA           NA         #> 6 Consume… ei_b… data… 25.02.2022       25.02.2022       1980M01      2022M02    #> # … with 1 more variable: values <chr> # }"},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_country_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize Country Code — harmonize_country_code","title":"Harmonize Country Code — harmonize_country_code","text":"European Commission Eurostat generally uses ISO 3166-1 alpha-2 codes two exceptions: EL (GR) used represent Greece, UK (GB) used represent United Kingdom. function turns country codes ISO 3166-1 alpha-2.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_country_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize Country Code — harmonize_country_code","text":"","code":"harmonize_country_code(x)"},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_country_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize Country Code — harmonize_country_code","text":"x character factor vector eurostat countycodes.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_country_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize Country Code — harmonize_country_code","text":"vector.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_country_code.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Harmonize Country Code — harmonize_country_code","text":"Janne Huovari janne.huovari@ptt.fi","code":""},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_country_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harmonize Country Code — harmonize_country_code","text":"","code":"# \\donttest{ lp <- get_eurostat(\"nama_10_lp_ulc\") #> Reading cache file /tmp/RtmpBLpMpp/r_cache2/nama_10_lp_ulc_date_code_FF.rds #> Table  nama_10_lp_ulc  read from cache file:  /tmp/RtmpBLpMpp/r_cache2/nama_10_lp_ulc_date_code_FF.rds lp$geo <- harmonize_country_code(lp$geo) # }"},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_geo_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Harmonize NUTS region codes that changed with the NUTS2016\ndefinition — harmonize_geo_code","title":"Harmonize NUTS region codes that changed with the NUTS2016\ndefinition — harmonize_geo_code","text":"Eurostat mixes NUTS2013 NUTS2016 geographic label codes 'geo' column, creates time-wise comparativity issues. deprecated function checked data affected problem gives information . function deprecated, general function moved regions::validate_nuts_regions().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_geo_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Harmonize NUTS region codes that changed with the NUTS2016\ndefinition — harmonize_geo_code","text":"","code":"harmonize_geo_code(dat)"},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_geo_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Harmonize NUTS region codes that changed with the NUTS2016\ndefinition — harmonize_geo_code","text":"dat Eurostat data frame downloaded get_eurostat()","code":""},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_geo_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Harmonize NUTS region codes that changed with the NUTS2016\ndefinition — harmonize_geo_code","text":"augmented data frame explains potential problems possible solutions.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_geo_code.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Harmonize NUTS region codes that changed with the NUTS2016\ndefinition — harmonize_geo_code","text":"Daniel Antal","code":""},{"path":"https://ropengov.github.io/eurostat/reference/harmonize_geo_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Harmonize NUTS region codes that changed with the NUTS2016\ndefinition — harmonize_geo_code","text":"","code":"dat <- eurostat::tgs00026 regions::validate_nuts_regions(dat) #> # A tibble: 3,096 × 7 #>    unit     na_item geo   time  values typology     valid_2016 #>    <chr>    <chr>   <chr> <chr>  <dbl> <chr>        <lgl>      #>  1 PPCS_HAB B6N     AT11  2005   18100 nuts_level_2 TRUE       #>  2 PPCS_HAB B6N     AT12  2005   18900 nuts_level_2 TRUE       #>  3 PPCS_HAB B6N     AT13  2005   19400 nuts_level_2 TRUE       #>  4 PPCS_HAB B6N     AT21  2005   17800 nuts_level_2 TRUE       #>  5 PPCS_HAB B6N     AT22  2005   17800 nuts_level_2 TRUE       #>  6 PPCS_HAB B6N     AT31  2005   18400 nuts_level_2 TRUE       #>  7 PPCS_HAB B6N     AT32  2005   18600 nuts_level_2 TRUE       #>  8 PPCS_HAB B6N     AT33  2005   18000 nuts_level_2 TRUE       #>  9 PPCS_HAB B6N     AT34  2005   18900 nuts_level_2 TRUE       #> 10 PPCS_HAB B6N     BE10  2005   14800 nuts_level_2 TRUE       #> # … with 3,086 more rows"},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Eurostat Codes — label_eurostat","title":"Get Eurostat Codes — label_eurostat","text":"Get definitions Eurostat codes Eurostat dictionaries.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Eurostat Codes — label_eurostat","text":"","code":"label_eurostat(   x,   dic = NULL,   code = NULL,   eu_order = FALSE,   lang = \"en\",   countrycode = NULL,   countrycode_nomatch = NULL,   custom_dic = NULL,   fix_duplicated = FALSE )  label_eurostat_vars(x, lang = \"en\")  label_eurostat_tables(x, lang = \"en\")"},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Eurostat Codes — label_eurostat","text":"x character factor vector data_frame. dic string (vector) naming eurostat dictionary dictionaries. NULL (default) dictionary names taken column names data_frame. code data_frames names column also code columns retained. suffix \"_code\" added code column names. eu_order Logical. Eurostat ordering used label levels. Affects factors. lang character, code language. Available \"en\" (default), \"fr\" \"de\". countrycode NULL name coding scheme countrycode::countrycode() label \"geo\" variable countrycode-package. can used convert short long country names many different languages. NULL (default) eurostat dictionary used instead. countrycode_nomatch using countrycode label \"geo\" countrycode fails find match, example country codes like EU28. original code used NULL (default), eurostat dictionary label used \"eurostat\", NA used NA. custom_dic named vector named list named vectors give dictionary (part ) codes. Names vector codes values labels. List can used specify dictionaries list names dictionary codes. fix_duplicated logical. TRUE, code added duplicated label values. FALSE (default) error given labeling produce duplicates.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Eurostat Codes — label_eurostat","text":"vector data_frame.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Eurostat Codes — label_eurostat","text":"character factor vector codes returns corresponding vector definitions. label_eurostat() labels also data_frames get_eurostat(). vectors dictionary name supplied. data_frames dictionary names taken column names. \"time\" \"values\" columns returned , can supply data_frame get_eurostat() get data_frame definitions instead codes. Eurostat dictionaries includes duplicated labels. default duplicated labels cause error, can fixed automatically fix_duplicated = TRUE.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get Eurostat Codes — label_eurostat","text":"label_eurostat_vars: Get definitions variable (column) names. objects characters factors definitions get names. label_eurostat_tables: Get definitions table names","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Eurostat Codes — label_eurostat","text":"Janne Huovari janne.huovari@ptt.fi","code":""},{"path":"https://ropengov.github.io/eurostat/reference/label_eurostat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Eurostat Codes — label_eurostat","text":"","code":"if (FALSE) { lp <- get_eurostat(\"nama_10_lp_ulc\") lpl <- label_eurostat(lp) str(lpl) lpl_order <- label_eurostat(lp, eu_order = TRUE) lpl_code <- label_eurostat(lp, code = \"unit\") label_eurostat_vars(names(lp)) label_eurostat_tables(\"nama_10_lp_ulc\") label_eurostat(c(\"FI\", \"DE\", \"EU28\"), dic = \"geo\") label_eurostat(c(\"FI\", \"DE\", \"EU28\"), dic = \"geo\", custom_dic = c(DE = \"Germany\")) label_eurostat(c(\"FI\", \"DE\", \"EU28\"),   dic = \"geo\", countrycode = \"country.name\",   custom_dic = c(EU28 = \"EU\") ) label_eurostat(c(\"FI\", \"DE\", \"EU28\"), dic = \"geo\", countrycode = \"country.name\") # In Finnish label_eurostat(c(\"FI\", \"DE\", \"EU28\"), dic = \"geo\", countrycode = \"cldr.short.fi\") }"},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2013.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode geo labels and rename regions from NUTS2016 to NUTS2013 — recode_to_nuts_2013","title":"Recode geo labels and rename regions from NUTS2016 to NUTS2013 — recode_to_nuts_2013","text":"Eurostat mixes NUTS2013 NUTS2016 geographic label codes 'geo' column, creates time-wise comparativity issues. function deprecated, general function moved [regions::recode_nuts()].","code":""},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2013.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode geo labels and rename regions from NUTS2016 to NUTS2013 — recode_to_nuts_2013","text":"","code":"recode_to_nuts_2013(dat)"},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2013.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode geo labels and rename regions from NUTS2016 to NUTS2013 — recode_to_nuts_2013","text":"dat Eurostat data frame downloaded get_eurostat().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2013.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode geo labels and rename regions from NUTS2016 to NUTS2013 — recode_to_nuts_2013","text":"augmented potentially relabelled data frame contains formerly 'NUTS2013' definition geo labels 'NUTS2016' vocabulary code changed, boundary . also contains information geo labels brought current 'NUTS2013' definition. Furthermore, official name region changed, use new name (otherwise region boundary change.) called , function use helper function harmonize_geo_code()","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2013.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recode geo labels and rename regions from NUTS2016 to NUTS2013 — recode_to_nuts_2013","text":"Daniel Antal","code":""},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2013.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode geo labels and rename regions from NUTS2016 to NUTS2013 — recode_to_nuts_2013","text":"","code":"test_regional_codes <- data.frame(   geo = c(\"FRB\", \"FRE\", \"UKN02\", \"IE022\", \"FR243\", \"FRB03\"),   time = c(rep(as.Date(\"2014-01-01\"), 5), as.Date(\"2015-01-01\")),   values = c(1:6),   control = c(     \"Changed from NUTS2 to NUTS1\",     \"New region NUTS2016 only\",     \"Discontinued region NUTS2013\",     \"Boundary shift NUTS2013\",     \"Recoded in NUTS2013\",     \"Recoded in NUTS2016\"   ) )  recode_to_nuts_2013(test_regional_codes) #> Warning: The 'recode_to_nuts_2013' function is deprecated. Use instead regions::recode_nuts(dat, nuts_year = 2013) #>     geo       time values                      control     typology #> 1 UKN02 2014-01-01      3 Discontinued region NUTS2013 nuts_level_3 #> 2 IE022 2014-01-01      4      Boundary shift NUTS2013 nuts_level_3 #> 3 FR243 2014-01-01      5          Recoded in NUTS2013 nuts_level_3 #> 4 FRB03 2015-01-01      6          Recoded in NUTS2016 nuts_level_3 #> 5   FRB 2014-01-01      1  Changed from NUTS2 to NUTS1 nuts_level_1 #> 6   FRE 2014-01-01      2     New region NUTS2016 only nuts_level_1 #>                               typology_change code_2013 #> 1                                   unchanged     UKN02 #> 2                                   unchanged     IE022 #> 3                                   unchanged     FR243 #> 4 Recoded from FRB03 [used in NUTS 2016-2021]     FR243 #> 5                      Used in NUTS 2016-2021      <NA> #> 6                      Used in NUTS 2016-2021      <NA>"},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2016.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode geo labels and rename regions from NUTS2013 to NUTS2016 — recode_to_nuts_2016","title":"Recode geo labels and rename regions from NUTS2013 to NUTS2016 — recode_to_nuts_2016","text":"Eurostat mixes NUTS2013 NUTS2016 geographic label codes 'geo' column, creates time-wise comparativity issues. function deprecated, general function moved [regions::recode_nuts()].","code":""},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode geo labels and rename regions from NUTS2013 to NUTS2016 — recode_to_nuts_2016","text":"","code":"recode_to_nuts_2016(dat)"},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2016.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode geo labels and rename regions from NUTS2013 to NUTS2016 — recode_to_nuts_2016","text":"dat Eurostat data frame downloaded get_eurostat().","code":""},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2016.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode geo labels and rename regions from NUTS2013 to NUTS2016 — recode_to_nuts_2016","text":"augmented potentially relabelled data frame contains formerly 'NUTS2013' definition geo labels 'NUTS2016' vocabulary code changed, boundary . also contains information geo labels brought current 'NUTS2016' definition. Furthermore, official name region changed, use new name (otherwise region boundary change.) called , function use helper function harmonize_geo_code()","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2016.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recode geo labels and rename regions from NUTS2013 to NUTS2016 — recode_to_nuts_2016","text":"Daniel Antal","code":""},{"path":"https://ropengov.github.io/eurostat/reference/recode_to_nuts_2016.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode geo labels and rename regions from NUTS2013 to NUTS2016 — recode_to_nuts_2016","text":"","code":"test_regional_codes <- data.frame(   geo = c(\"FRB\", \"FRE\", \"UKN02\", \"IE022\", \"FR243\", \"FRB03\"),   time = c(rep(as.Date(\"2014-01-01\"), 5), as.Date(\"2015-01-01\")),   values = c(1:6),   control = c(     \"Changed from NUTS2 to NUTS1\",     \"New region NUTS2016 only\",     \"Discontinued region NUTS2013\",     \"Boundary shift NUTS2013\",     \"Recoded in NUTS2013\",     \"Recoded in NUTS2016\"   ) )  recode_to_nuts_2016(test_regional_codes) #> Warning: The 'recode_to_nuts_2013' function is deprecated. Use instead regions::recode_nuts(dat, nuts_year = 2016) #>     geo       time values                      control     typology #> 1   FRB 2014-01-01      1  Changed from NUTS2 to NUTS1 nuts_level_1 #> 2   FRE 2014-01-01      2     New region NUTS2016 only nuts_level_1 #> 3 FRB03 2015-01-01      6          Recoded in NUTS2016 nuts_level_3 #> 4 IE022 2014-01-01      4      Boundary shift NUTS2013 nuts_level_3 #> 5 FR243 2014-01-01      5          Recoded in NUTS2013 nuts_level_3 #> 6 UKN02 2014-01-01      3 Discontinued region NUTS2013 nuts_level_3 #>                               typology_change code_2016 #> 1                                   unchanged       FRB #> 2                                   unchanged       FRE #> 3                                   unchanged     FRB03 #> 4 Recoded from IE022 [used in NUTS 2013-2013]     IE062 #> 5 Recoded from FR243 [used in NUTS 1999-2013]     FRB03 #> 6                      Used in NUTS 1999-2013      <NA>"},{"path":"https://ropengov.github.io/eurostat/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Region Codes From Source To Target NUTS Typology — reexports","title":"Recode Region Codes From Source To Target NUTS Typology — reexports","text":"objects imported packages. Follow links see documentation. regions recode_nuts, validate_geo_code, validate_nuts_regions","code":""},{"path":"https://ropengov.github.io/eurostat/reference/reexports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Region Codes From Source To Target NUTS Typology — reexports","text":"dat data frame 3-5 character geo_var variable validated. geo_var Defaults \"geo\". variable contains 3-5 character geo codes validated. geo vector geographical code validate. nuts_year valid NUTS edition year.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Region Codes From Source To Target NUTS Typology — reexports","text":"original data frame 'geo_var' column extended 'typology' column states typology 'geo_var'valid code.  invalid codes, looks potential reasons invalidity adds 'typology_change' column, last adds column character vector containing desired codes target typology, example, NUTS2013 typology. Returns original dat data frame column specifies comformity NUTS definition year nuts_year. character list valid typology, 'invalid' cases geo coding valid.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/reexports.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode Region Codes From Source To Target NUTS Typology — reexports","text":"country codes technically part NUTS typologies, Eurostat de facto uses NUTS0 typology identify countries. de facto typology three exception handled validate_nuts_countries function. NUTS typologies different versions, therefore conformity validated one specific versions, can : 1999, 2003, 2006, 2010, 2013, currently used 2016 already announced defined 2021. NUTS typology codified NUTS2003, pre-1999 NUTS typologies may confuse programmatic data processing, given  NUTS1 regions identified country codes smaller countries NUTS1 divisions. Currently 2016 used Eurostat, many datasets still contain 2013 sometimes earlier metadata.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Region Codes From Source To Target NUTS Typology — reexports","text":"","code":"{ foo <- data.frame (   geo  =  c(\"FR\", \"DEE32\", \"UKI3\" ,             \"HU12\", \"DED\",             \"FRK\"),   values = runif(6, 0, 100 ),   stringsAsFactors = FALSE )  recode_nuts(foo, nuts_year = 2013) } #>     geo    values     typology                           typology_change #> 1    FR 42.307631      country                                 unchanged #> 2  UKI3 45.615107 nuts_level_2                                 unchanged #> 3   DED 67.566492 nuts_level_1                                 unchanged #> 4   FRK  4.352186 nuts_level_1 Recoded from FRK [used in NUTS 2016-2021] #> 5  HU12 64.609116 nuts_level_2                    Used in NUTS 2016-2021 #> 6 DEE32 55.884929 nuts_level_3                    Used in NUTS 1999-2003 #>   code_2013 #> 1        FR #> 2      UKI3 #> 3       DED #> 4       FR7 #> 5      <NA> #> 6      <NA> # \\donttest{ my_reg_data <- data.frame(   geo = c(     \"BE1\", \"HU102\", \"FR1\",     \"DED\", \"FR7\", \"TR\", \"DED2\",     \"EL\", \"XK\", \"GB\"   ),   values = runif(10) )  validate_nuts_regions(my_reg_data) #>      geo     values         typology valid_2016 #> 1    BE1 0.62958253     nuts_level_1       TRUE #> 2  HU102 0.64775698             <NA>      FALSE #> 3    FR1 0.99506977     nuts_level_1       TRUE #> 4    DED 0.25935983     nuts_level_1       TRUE #> 5    FR7 0.32876325 iso-3166-alpha-3      FALSE #> 6     TR 0.42865091          country       TRUE #> 7   DED2 0.90985038     nuts_level_2       TRUE #> 8     EL 0.95120954          country       TRUE #> 9     XK 0.55033789          country       TRUE #> 10    GB 0.02130705          country       TRUE  validate_nuts_regions(my_reg_data, nuts_year = 2013) #>      geo     values     typology valid_2013 #> 1    BE1 0.62958253 nuts_level_1       TRUE #> 2  HU102 0.64775698 nuts_level_3       TRUE #> 3    FR1 0.99506977 nuts_level_1       TRUE #> 4    DED 0.25935983 nuts_level_1       TRUE #> 5    FR7 0.32876325 nuts_level_1       TRUE #> 6     TR 0.42865091      country       TRUE #> 7   DED2 0.90985038 nuts_level_2       TRUE #> 8     EL 0.95120954      country       TRUE #> 9     XK 0.55033789      country       TRUE #> 10    GB 0.02130705      country       TRUE  validate_nuts_regions(my_reg_data, nuts_year = 2003) #>      geo     values     typology valid_2003 #> 1    BE1 0.62958253 nuts_level_1       TRUE #> 2  HU102 0.64775698         <NA>      FALSE #> 3    FR1 0.99506977 nuts_level_1       TRUE #> 4    DED 0.25935983 nuts_level_1       TRUE #> 5    FR7 0.32876325 nuts_level_1       TRUE #> 6     TR 0.42865091      country       TRUE #> 7   DED2 0.90985038 nuts_level_2       TRUE #> 8     EL 0.95120954      country       TRUE #> 9     XK 0.55033789      country       TRUE #> 10    GB 0.02130705      country       TRUE # } # \\donttest{ my_reg_data <- data.frame(   geo = c(     \"BE1\", \"HU102\", \"FR1\",     \"DED\", \"FR7\", \"TR\", \"DED2\",     \"EL\", \"XK\", \"GB\"   ),   values = runif(10) )  validate_geo_code(my_reg_data$geo) #>  [1] \"nuts_level_1\"   \"invalid\"        \"nuts_level_1\"   \"nuts_level_1\"   #>  [5] \"invalid\"        \"non_eu_country\" \"nuts_level_2\"   \"country\"        #>  [9] \"non_eu_country\" \"iso_country\"    # }"},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":null,"dir":"Reference","previous_headings":"","what":"Grep Datasets Titles from Eurostat — search_eurostat","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"Lists names dataset eurostat particular pattern description.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"","code":"search_eurostat(pattern, type = \"dataset\", fixed = TRUE)  grepEurostatTOC(pattern, type = \"dataset\")"},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"pattern Character, datasets, folder tables pattern description returned (depending 'type' argument) type Grep Eurostat table contents either 'dataset' (default), 'folder', 'table' \"\" (types). fixed logical. TRUE, pattern string matched . Change FALSE complex regex matching needed.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"tibble eight columns title: name dataset theme code: codename dataset theme, used get_eurostat() get_eurostat_raw() functions. type: dataset, folder table. last.update..data, last.table.structure.change, data.start, data.end: Dates.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"Downloads list datasets available eurostat return list names datasets contains particular pattern dataset description. E.g. datasets related education teaching.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"grepEurostatTOC: Old deprecated version","code":""},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"See citation(\"eurostat\"):","code":"#  # Kindly cite the eurostat R package as follows: #  #   (C) Leo Lahti, Janne Huovari, Markus Kainu, Przemyslaw Biecek. #   Retrieval and analysis of Eurostat open data with the eurostat #   package. R Journal 9(1):385-392, 2017. doi: 10.32614/RJ-2017-019 #   Package URL: http://ropengov.github.io/eurostat Article URL: #   https://journal.r-project.org/archive/2017/RJ-2017-019/index.html #  # A BibTeX entry for LaTeX users is #  #   @Article{, #     title = {Retrieval and Analysis of Eurostat Open Data with the eurostat Package}, #     author = {Leo Lahti and Janne Huovari and Markus Kainu and Przemyslaw Biecek}, #     journal = {The R Journal}, #     volume = {9}, #     number = {1}, #     pages = {385--392}, #     year = {2017}, #     doi = {10.32614/RJ-2017-019}, #     url = {https://doi.org/10.32614/RJ-2017-019}, #   }"},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"Przemyslaw Biecek Leo Lahti ropengov-forum@googlegroups.com","code":""},{"path":"https://ropengov.github.io/eurostat/reference/search_eurostat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grep Datasets Titles from Eurostat — search_eurostat","text":"","code":"# \\donttest{ tmp <- search_eurostat(\"education\") head(tmp) #> # A tibble: 6 × 8 #>   title    code  type  `last update o…` `last table st…` `data start` `data end` #>   <chr>    <chr> <chr> <chr>            <chr>            <chr>        <chr>      #> 1 Populat… cens… data… 01.04.2019       08.02.2021       2011         2011       #> 2 Populat… cens… data… 26.08.2015       08.02.2021       2011         2011       #> 3 Employe… cens… data… 26.03.2009       08.02.2021       2001         2001       #> 4 Populat… cens… data… 26.03.2009       08.02.2021       2001         2001       #> 5 Pupils … educ… data… 02.03.2022       08.02.2021       2013         2019       #> 6 Pupils … educ… data… 02.03.2022       08.02.2021       2013         2019       #> # … with 1 more variable: values <chr> # Use \"fixed = TRUE\" when pattern has characters that would need escaping. # Here, parentheses would normally need to be escaped in regex tmp <- search_eurostat(\"Live births (total) by NUTS 3 region\", fixed = TRUE) # }"},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Eurostat Cache — set_eurostat_cache_dir","title":"Set Eurostat Cache — set_eurostat_cache_dir","text":"function store cache_dir path local machine load future sessions. Type Sys.getenv(\"EUROSTAT_CACHE_DIR\") find cached path. Alternatively, can store cache_dir manually following options: Run Sys.setenv(EUROSTAT_CACHE_DIR = \"cache_dir\"). need run command session (Similar install = FALSE). Set options(eurostat_cache_dir  = \"cache_dir\"). Similar previous option. provided backwards compatibility purposes. Write line .Renviron file: EUROSTAT_CACHE_DIR = \"value_for_cache_dir\" (behavior install = TRUE). store cache_dir permanently.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Eurostat Cache — set_eurostat_cache_dir","text":"","code":"set_eurostat_cache_dir(   cache_dir,   overwrite = FALSE,   install = FALSE,   verbose = TRUE )"},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_cache_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Eurostat Cache — set_eurostat_cache_dir","text":"cache_dir path cache directory. missing value function store cached files temporary dir (See base::tempdir()). overwrite set TRUE, overwrite existing EUROSTAT_CACHE_DIR already local machine. install TRUE, install key local machine use future sessions. Defaults FALSE. cache_dir FALSE parameter set FALSE automatically. verbose Logical, displays information. Useful debugging, default FALSE.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Eurostat Cache — set_eurostat_cache_dir","text":"(invisible) character path cache_dir.","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_cache_dir.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set Eurostat Cache — set_eurostat_cache_dir","text":"Diego Hernangómez","code":""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Eurostat Cache — set_eurostat_cache_dir","text":"","code":"# Don't run this! It would modify your current state if (FALSE) { set_eurostat_cache_dir(verbose = TRUE) }  Sys.getenv(\"EUROSTAT_CACHE_DIR\") #> [1] \"/tmp/RtmpBLpMpp/r_cache2\""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Eurostat TOC — set_eurostat_toc","title":"Set Eurostat TOC — set_eurostat_toc","text":"Internal function.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Eurostat TOC — set_eurostat_toc","text":"","code":"set_eurostat_toc(...)"},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_toc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Eurostat TOC — set_eurostat_toc","text":"... Arguments passed","code":""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_toc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Eurostat TOC — set_eurostat_toc","text":"Empty element","code":""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_toc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set Eurostat TOC — set_eurostat_toc","text":"see citation(\"eurostat\")","code":""},{"path":"https://ropengov.github.io/eurostat/reference/set_eurostat_toc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set Eurostat TOC — set_eurostat_toc","text":"Przemyslaw Biecek Leo Lahti ropengov-forum@googlegroups.com","code":""},{"path":"https://ropengov.github.io/eurostat/reference/tgs00026.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary Data — tgs00026","title":"Auxiliary Data — tgs00026","text":"Auxiliary Data Sets","code":""},{"path":"https://ropengov.github.io/eurostat/reference/tgs00026.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary Data — tgs00026","text":"","code":"tgs00026"},{"path":"https://ropengov.github.io/eurostat/reference/tgs00026.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Auxiliary Data — tgs00026","text":"data_frame","code":""},{"path":"https://ropengov.github.io/eurostat/reference/tgs00026.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Auxiliary Data — tgs00026","text":"Retrieved : tgs00026 <- get_eurostat(\"tgs00026\", time_format = \"raw\")","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/tidy_eurostat.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Data into Row-Column-Value Format — tidy_eurostat","title":"Transform Data into Row-Column-Value Format — tidy_eurostat","text":"Transform raw Eurostat data table row-column-value format (RCV).","code":""},{"path":"https://ropengov.github.io/eurostat/reference/tidy_eurostat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Data into Row-Column-Value Format — tidy_eurostat","text":"","code":"tidy_eurostat(   dat,   time_format = \"date\",   select_time = NULL,   stringsAsFactors = FALSE,   keepFlags = FALSE )"},{"path":"https://ropengov.github.io/eurostat/reference/tidy_eurostat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Data into Row-Column-Value Format — tidy_eurostat","text":"dat data_frame get_eurostat_raw(). time_format string giving type conversion time column eurostat format. \"date\" (default) converts Date() first date period. \"date_last\" converts Date() last date period. \"num\" converts numeric \"raw\" conversion. See eurotime2date() eurotime2num(). select_time character symbol time frequency NULL (default). stringsAsFactors TRUE (default) variables converted factors original Eurostat order. FALSE returned strings. keepFlags logical whether flags (e.g. \"confidential\", \"provisional\") kept separate column can removed. Default FALSE","code":""},{"path":"https://ropengov.github.io/eurostat/reference/tidy_eurostat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Data into Row-Column-Value Format — tidy_eurostat","text":"tibble molten format last column 'values'.","code":""},{"path":"https://ropengov.github.io/eurostat/reference/tidy_eurostat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Transform Data into Row-Column-Value Format — tidy_eurostat","text":"See citation(\"eurostat\").","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/reference/tidy_eurostat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform Data into Row-Column-Value Format — tidy_eurostat","text":"Przemyslaw Biecek, Leo Lahti Janne Huovari","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-3710-2022-02-09","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.10 (2022-02-09)","title":"eurostat 3.7.10 (2022-02-09)","text":"CRAN release: 2022-02-09 Fixed URL issues tests examples","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-379-2020-10-01","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.9 (2020-10-01)","title":"eurostat 3.7.9 (2020-10-01)","text":"Function documentation migrated old \\code{}, \\link{} syntax markdown (issue #230, PR #231 @dieghernan)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-378-2020-09-30","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.8 (2020-09-30)","title":"eurostat 3.7.8 (2020-09-30)","text":"Package cache management updated: options() command longer needed cache dir can modified persistently custom function (issue #223, PR #228 @dieghernan)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-377-2020-06-24","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.7 (2020-06-24)","title":"eurostat 3.7.7 (2020-06-24)","text":"Maps vignette fixed","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-376-2021-05-20","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.6 (2021-05-20)","title":"eurostat 3.7.6 (2021-05-20)","text":"Deprecated add_nuts_level(), harmonize_geo_code(), recode_to_nuts_2016() recode_to_nuts_2013(); functions moved new package regions. problem sub-national geo codes explained new vignette “Mapping Regional Data, Mapping Metadata Problems”, replaces “Regional data examples eurostat R package” vignette. shared vignette, new regions package articles work sub-national data. (issues #218 #219, PR #220 @antaldaniel)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-375-2020-05-12","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.5 (2020-05-12)","title":"eurostat 3.7.5 (2020-05-12)","text":"CRAN release: 2021-05-14 Moved sf Imports Suggests made get_eurostat_geospatial() return message sf installed. increase compatibility eurostat-package systems trouble installing sf (issue #213) Wrapped problem causing examples \\dontrun{} quick CRAN release","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-373","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.3","title":"eurostat 3.7.3","text":"Removed outdated dependencies (mapproj, plotrix, rsdmx)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-372","dir":"Changelog","previous_headings":"","what":"eurostat 3.7.2","title":"eurostat 3.7.2","text":"Non-intersecting sf-geometries get_eurostat_geospatial (PR #202 @retostauffer)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-364-2020-05-12","dir":"Changelog","previous_headings":"","what":"eurostat 3.6.4 (2020-05-12)","title":"eurostat 3.6.4 (2020-05-12)","text":"Fixed stringsAsFactors R-4.0.0 moved default FALSE","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-363-2020-04-21","dir":"Changelog","previous_headings":"","what":"eurostat 3.6.3 (2020-04-21)","title":"eurostat 3.6.3 (2020-04-21)","text":"Stabilized http requests (PR @annnvv)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-353","dir":"Changelog","previous_headings":"","what":"eurostat 3.5.3","title":"eurostat 3.5.3","text":"get_eurostat switched v2.1","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-352","dir":"Changelog","previous_headings":"","what":"eurostat 3.5.2","title":"eurostat 3.5.2","text":"CRAN release: 2020-01-25 internet proxy setting fixes bibentry fix","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-341","dir":"Changelog","previous_headings":"","what":"eurostat 3.4.1","title":"eurostat 3.4.1","text":"Fixed vignette Added automated error messages URL download failures","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-333","dir":"Changelog","previous_headings":"","what":"eurostat 3.3.3","title":"eurostat 3.3.3","text":"Countries Country Codes data.frames get label column country names Eurostat database. Fixed vignette duplicate entry issue smaller issues Added get_bibentry","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-331","dir":"Changelog","previous_headings":"","what":"eurostat 3.3.1","title":"eurostat 3.3.1","text":"CRAN release: 2018-11-24 label_eurostat() new countrycode countrycode_nomatch arguments label countrycode package custom_dic argument add custom dictionary. Vignette updated","code":""},{"path":[]},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"minor-features-3-2-3","dir":"Changelog","previous_headings":"","what":"Minor features","title":"eurostat 3.2.3","text":"dplyr moved Dependencies Imports curl removed Imports solved geospatial map issues eurostat_url moved options","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-321","dir":"Changelog","previous_headings":"","what":"eurostat 3.2.1","title":"eurostat 3.2.1","text":"CRAN release: 2018-05-20","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"major-updates-3-2-1","dir":"Changelog","previous_headings":"","what":"Major updates","title":"eurostat 3.2.1","text":"Improved support sf map visualization","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"minor-features-3-2-1","dir":"Changelog","previous_headings":"","what":"Minor features","title":"eurostat 3.2.1","text":"./data/ generation script ./data-raw/ updated make data reproducible","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"bug-fixes-3-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"eurostat 3.2.1","text":"Typo corrected Cisco Gisco","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-315","dir":"Changelog","previous_headings":"","what":"eurostat 3.1.5","title":"eurostat 3.1.5","text":"CRAN release: 2017-08-09","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"minor-features-3-1-5","dir":"Changelog","previous_headings":"","what":"Minor features","title":"eurostat 3.1.5","text":"Added new example data set reduce repeated downloads eurostat service Now label_eurostat() gives always error default, labelling introduces duplicated labels. new fix_duplicated argument add fix duplicated labels automatically. (#79, #90) Shrinked package tarball size","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"bug-fixes-3-1-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"eurostat 3.1.5","text":"Modified tutorial accommodate CRAN error Fixed cut_to_classes generate unique breaks","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-311","dir":"Changelog","previous_headings":"","what":"eurostat 3.1.1","title":"eurostat 3.1.1","text":"CRAN release: 2017-03-16","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"r-journal-submission-3-1-1","dir":"Changelog","previous_headings":"","what":"R Journal submission","title":"eurostat 3.1.1","text":"Release version associated R Journal manuscript 2017 final version Git release added Zenodo DOI","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"minor-features-3-1-1","dir":"Changelog","previous_headings":"","what":"Minor features","title":"eurostat 3.1.1","text":"Changed maintainer email address louhos leo Added ./docs/ (automated package website generated pkgdown) Expanded unit tests Gitter badge added README Added ./revdep/ check possible reverse dependencies automatically Cheat sheet added","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"bug-fixes-3-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"eurostat 3.1.1","text":"search_eurostat() accepts new argument fixed: TRUE (default), pattern provided used ; FALSE, pattern interpreted true regex pattern. Augmented list Suggested packages DESCRIPTION file, including Cairo package (#70) Updated journal manuscript based reviewer feedback","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-2220001","dir":"Changelog","previous_headings":"","what":"eurostat 2.2.20001","title":"eurostat 2.2.20001","text":"Development version opened","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-221","dir":"Changelog","previous_headings":"","what":"eurostat 2.2.1","title":"eurostat 2.2.1","text":"CRAN release: 2016-09-14 Fixed canonical cran url README","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-211","dir":"Changelog","previous_headings":"","what":"eurostat 2.1.1","title":"eurostat 2.1.1","text":"complete package now using tibbles Rare encoding issues circumvented (#55) Improved functionality within firewall-protected systems (#63)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-20","dir":"Changelog","previous_headings":"","what":"eurostat 2.0","title":"eurostat 2.0","text":"get_eurostat() returns tibbles (#52) get_eurostat_dic() get_eurostat_toc() return tibbles Now read_tsv() used instead read.csv() (#29)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-1227","dir":"Changelog","previous_headings":"","what":"eurostat 1.2.27","title":"eurostat 1.2.27","text":"Calls extract_numeric replaced .numeric (#60) column ‘flags’ labelled even type = “label” (#61)","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-1222","dir":"Changelog","previous_headings":"","what":"eurostat 1.2.22","title":"eurostat 1.2.22","text":"European Commission Eurostat generally uses ISO 3166-1 alpha-2 codes two exceptions: EL (GR) used represent Greece, UK (GB) used represent United Kingdom. now can handled harmonize_country_code() converts raw data values EL GR UK GB. Harmonized roxygen documentation better follow CRAN conventions Changed Windows encoding UTF input files Improved memory usage","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-1221","dir":"Changelog","previous_headings":"","what":"eurostat 1.2.21","title":"eurostat 1.2.21","text":"CRAN release: 2016-03-11 get_eurostat() can now get data also Eurostat JSON API via get_eurostat_json(). also new argument type select labels variable values instead codes. Fix error update tidyr 0.4.0 (#47).","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-1213","dir":"Changelog","previous_headings":"","what":"eurostat 1.2.13","title":"eurostat 1.2.13","text":"CRAN release: 2016-01-19 New select_time argument get_eurostat() select time frequency case multi-frequency datasets. Now get_eurostat() also gives error try get multi-frequency time formats time_format = \"raw\". (#30) time column also now ascending order. get_eurostat() gets new argument compress_file control compression cache file. Also cache filenames includes now relevant arguments. (#28) search_eurostat() new type option type = \"\" search types. label_eurostat() new arguments. code retain also codes spesified colums. eu_order order factor levels Eurostat order, uses new function dic_order(). Now label_eurostat_vars(x) gives labels names, x character factor label_eurostat_tables(x) accept character factor. get_eurostat() new argument stringsAsFactors control factor conversion variables. eurotime2date (get_eurostat) convers now also daily data.","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-1016","dir":"Changelog","previous_headings":"","what":"eurostat 1.0.16","title":"eurostat 1.0.16","text":"CRAN release: 2015-03-27 Fixed vignette error","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-1014-2015-03-19","dir":"Changelog","previous_headings":"","what":"eurostat 1.0.14 (2015-03-19)","title":"eurostat 1.0.14 (2015-03-19)","text":"Package largely rewritten Vignette added Changed value column values get_eurostat output","code":""},{"path":"https://ropengov.github.io/eurostat/news/index.html","id":"eurostat-091-2014-04-24","dir":"Changelog","previous_headings":"","what":"eurostat 0.9.1 (2014-04-24)","title":"eurostat 0.9.1 (2014-04-24)","text":"Package collected statfi smarterpoland","code":""}]
